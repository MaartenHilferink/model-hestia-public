//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template StartingStateComponent
{
	// begin case parameters
	unit<uint32> BebouwingsObjectSrc;
	unit<uint32> ModelObject;
	parameter<Classifications/BebouwingsSector> BebouwingsSector_rel;
	// end case parameters

	parameter<yr_uint16> Startjaar_jaar := Classifications/RekenJaar/values[first(Classifications/ZichtJaar/RekenJaar_rel)];

	unit<uint32>  results := BebouwingsObjectSrc
	{
		// =============== ongewijzigde attributen uniform voor alle BC
		attribute<Invoer/SpecifiekeInstellingen/PlanRegio> PlanRegio_rel   := BebouwingsObjectSrc/buurt_rel;
		attribute<ModelObject>                             ModelObject_rel := rlookup(BebouwingsObjectSrc/ModelObjectKey, ModelObject/ModelObjectKey);
		attribute<Invoer/RuimtelijkeData/BestaandeWarmtenetten/Aflevergebied_data> Aflevergebied_rel := point_in_polygon(point, Invoer/RuimtelijkeData/BestaandeWarmtenetten/Aflevergebied_data/geometry);

		// =============== attributen die per Rekenstap kunnen wijzigen door toepassing van GebouwOpties
		attribute<Classifications/SchilLabel>  SchilLabel_rel := =(BebouwingsSector_rel == Classifications/BebouwingsSector/V/Woning) 
			? 'MakeDefined(BebouwingsObjectSrc/SchilLabel_rel, Classifications/schillabel/V/N)'
			: 'ModelObject/SchilLabel_rel[ ModelObject_rel]';

	/* 	== ALLEEN VOOR HERBEPALEN DEFAULT SCHILLABELS ==
			unit<uint32> labeled := subset(schillabel_rel != classifications/SchilLabel/V/N && not(isdefined(Sloopjaar)))
			{
				attribute<Classifications/SchilLabel> SchilLabel_nu := SchilLabel_rel[nr_orgentity];
				attribute<ModelObject> ModelObject_nu := ModelObject_rel[nr_orgentity];
				attribute<Classifications/SchilLabel> def_check_modus (ModelObject) := modus(SchilLabel_nu,ModelObject_nu);
				attribute<Classifications/SchilLabel> def_check_mean (ModelObject) := mean(SchilLabel_nu,ModelObject_nu);
			}
	*/
			
		attribute<Classifications/SchilLabel>  DefaultLabel_rel := MakeDefined(BebouwingsObjectSrc/SchilLabel_rel, ModelObject/SchilLabel_rel[ ModelObject_rel]);
			
		attribute<Classifications/Schillabel>  StartLabel_rel := SchilLabel_rel;
		attribute<units/yr_uint16> Bouwjaar  := =BebouwingsSector_rel == Classifications/BebouwingsSector/V/Woning ?
			'Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/bouwjaar' : 'Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/bouwjaar';
		attribute<units/yr_uint16> Sloopjaar := =BebouwingsSector_rel == Classifications/BebouwingsSector/V/Woning ?
			'Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/sloopjaar' : 'Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/sloopjaar';
		attribute<Classifications/Eigendom> Eigendom_rel  := =BebouwingsSector_rel == Classifications/BebouwingsSector/V/Woning ?
			'Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/Eigendom_rel' : 'Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/Eigendom_rel';
	
		unit<uint32> BestaandAflevergebied := Invoer/RuimtelijkeData/BestaandeWarmtenetten/Aflevergebied_data;
		unit<uint32> BestaandWarmtenet     := Invoer/RuimtelijkeData/BestaandeWarmtenetten/Warmtenetten;
		attribute<BestaandAflevergebied> BestaandAflevergebied_rel := point_in_polygon(BebouwingsObjectSrc/point , BestaandAflevergebied/Geometry);
		attribute<BestaandWarmtenet>     BestaandWarmtenet_rel     := BestaandAflevergebied/Warmtenet_rel[BestaandAflevergebied_rel];
		
		attribute<bool> Gasloos := =Invoer/StartgegevensAan ? 'BebouwingsObjectSrc/Gasloos' : 'const(false,.)';

		attribute<Classifications/GebouwOptie> GebouwOptie_rel :=
				gasloos && not(isdefined(BestaandAflevergebied_rel)) && Defaultlabel_rel >=  Classifications/schillabel/V/C ? Classifications/GebouwOptie/V/Bioketel_zKD
			:	gasloos && not(isdefined(BestaandAflevergebied_rel)) && Defaultlabel_rel < Classifications/schillabel/V/C ? Classifications/GebouwOptie/V/LweWP_zKD
			:	isdefined(BestaandAflevergebied_rel) && BestaandAflevergebied/Startjaar[BestaandAflevergebied_rel] <= 2000w ?  Classifications/GebouwOptie/V/Gebied_zK
			:	ModelObject/StartOptie_rel[ModelObject_rel];


		//====================== INITIELE BEREKENING RUIMTEVERWARMING ================

		container warmteverlies_theoretisch_startjaar
		{
			container warmtewinst
			{
				//============ warmtewinst door personen wordt bepaald als constante
				attribute<GJ_yr> warmtewinst_personen         (...) := const(2.18[GJ_yr],...);

				//============ warmtewinst door apparaten wordt gelijkgesteld aan de vraag naar elektriciteit voor elektrische apparatuur
				attribute<GJ_yr> warmtewinst_apparaten        (...) := Functioneel/BaseValues/EA;

				//============ warmtewist door zoninstralen door ramen boven (RB) en onder (RO) als functie van oppervlak bouwdeel en waarde horende bij isolatiegraad
				attribute<GJ_yr> warmtewinst_zoninstraling_RB (...) := bouwdelen/RB * merge(uint8(bouwdelen/isolatie/RB), GJ_yr_m2, 0.456988[GJ_yr_m2],0.362902[GJ_yr_m2],0.322580[GJ_yr_m2],0.215053[GJ_yr_m2]), descr = "warmtewinst ramen boven";
				attribute<GJ_yr> warmtewinst_zoninstraling_RO (...) := bouwdelen/RO * merge(uint8(bouwdelen/isolatie/RO), GJ_yr_m2, 0.456988[GJ_yr_m2],0.362902[GJ_yr_m2],0.322580[GJ_yr_m2],0.215053[GJ_yr_m2]), descr = "warmtewinst ramen onder";
				attribute<GJ_yr> warmtewinst_zoninstraling    (...) := warmtewinst_zoninstraling_RO + warmtewinst_zoninstraling_RB;	

				//============ totaal warmtewinsten
				attribute<GJ_yr> Totaal                       (...) := warmtewinst_personen + warmtewinst_apparaten + warmtewinst_zoninstraling;
			}

			//========= warmteverlies per bouwdeel als functie van oppervlak van bouwdeel en waarde horende bij isolatiegraad
			attribute<GJ_yr> VL (..) := bouwdelen/VL * merge(uint8(bouwdelen/isolatie/VL), GJ_yr_m2, 0.193150[GJ_yr_m2],0.059152[GJ_yr_m2],0.024647[GJ_yr_m2],0.017723[GJ_yr_m2]), descr = "warmteverlies vloer";
			attribute<GJ_yr> DS (..) := bouwdelen/DS * merge(uint8(bouwdelen/isolatie/DS), GJ_yr_m2, 0.525797[GJ_yr_m2],0.128767[GJ_yr_m2],0.052002[GJ_yr_m2],0.023254[GJ_yr_m2]), descr = "warmteverlies schuin dak";
			attribute<GJ_yr> DP (..) := bouwdelen/DP * merge(uint8(bouwdelen/isolatie/DP), GJ_yr_m2, 0.525797[GJ_yr_m2],0.128767[GJ_yr_m2],0.052002[GJ_yr_m2],0.023254[GJ_yr_m2]), descr = "warmteverlies plat dak";
			attribute<GJ_yr> MS (..) := bouwdelen/MS * merge(uint8(bouwdelen/isolatie/MS), GJ_yr_m2, 0.357145[GJ_yr_m2],0.357145[GJ_yr_m2],0.357145[GJ_yr_m2],0.096085[GJ_yr_m2]), descr = "warmteverlies spouwmuur";
			attribute<GJ_yr> MG (..) := bouwdelen/MG * merge(uint8(bouwdelen/isolatie/MG), GJ_yr_m2, 0.525797[GJ_yr_m2],0.051577[GJ_yr_m2],0.036613[GJ_yr_m2],0.030679[GJ_yr_m2]), descr = "warmteverlies gevel";
			attribute<GJ_yr> DR (..) := bouwdelen/DR * merge(uint8(bouwdelen/isolatie/DR), GJ_yr_m2, 0.415363[GJ_yr_m2],0.415363[GJ_yr_m2],0.415363[GJ_yr_m2],0.116844[GJ_yr_m2]), descr = "warmteverlies deuren";
			attribute<GJ_yr> PL (..) := bouwdelen/PL * merge(uint8(bouwdelen/isolatie/PL), GJ_yr_m2, 0.461675[GJ_yr_m2],0.087229[GJ_yr_m2],0.051577[GJ_yr_m2],0.036613[GJ_yr_m2]), descr = "warmteverlies paneel";
			attribute<GJ_yr> RO (..) := bouwdelen/RO * merge(uint8(bouwdelen/isolatie/RO), GJ_yr_m2, 1.097864[GJ_yr_m2],0.511074[GJ_yr_m2],0.227144[GJ_yr_m2],0.151429[GJ_yr_m2]), descr = "warmteverlies ramen onder";
			attribute<GJ_yr> RB (..) := bouwdelen/RB * merge(uint8(bouwdelen/isolatie/RB), GJ_yr_m2, 1.097864[GJ_yr_m2],0.511074[GJ_yr_m2],0.227144[GJ_yr_m2],0.151429[GJ_yr_m2]), descr = "warmteverlies ramen boven";
			attribute<GJ_yr> KR (..) := bouwdelen/KR * merge(uint8(bouwdelen/isolatie/KR), GJ_yr_m2, 0.060368[GJ_yr_m2],0.045313[GJ_yr_m2],0.026454[GJ_yr_m2],0.015129[GJ_yr_m2]), descr = "warmteverlies kieren";

			//========= warmteverlies ventilatie
			attribute<GJ_yr> Vrv_VT_asl (..) := Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V_RV_asl[InstallatiePerProduct/VT] * nrAansluitingen_i, descr = "warmteverlies ventilatie vast per aansluiting";
			
			//========= theoretische verlies ruimteverwarming (excl warmtewinsten)
			attribute<GJ_yr> Theoretisch_RV (..) := VL + DP + DS + MG + MS + DR + PL + RO + RB + KR + Vrv_VT_asl;

			//========= gemeten vraag ruimteverwarming gecorrigeerd voor warmtewinsten
			attribute<GJ_yr> Gemeten_RV     (..) := Functioneel/BaseValues/RV + warmtewinst/totaal;

			//========= relatief verschil als fitfactor
			attribute<ratio> Fitfactor      (..) := Gemeten_RV / Theoretisch_RV;

			//========= gefit verlies bij isolatiegraad N1 als referentiepunt voor berekeningen per zichtjaar
			container RV_N1_per_Bouwdeel
			{
				//========= gefit verlies per bouwdeel
				attribute<GJ_yr> VL (...) := bouwdelen/VL * 0.193150[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door vloer";
				attribute<GJ_yr> DS (...) := bouwdelen/DS * 0.525797[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door schuin dak";
				attribute<GJ_yr> DP (...) := bouwdelen/DP * 0.525797[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door plat dak";
				attribute<GJ_yr> MS (...) := bouwdelen/MS * 0.357145[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door spouwmuur";
				attribute<GJ_yr> MG (...) := bouwdelen/MG * 0.525797[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door gevel";
				attribute<GJ_yr> DR (...) := bouwdelen/DR * 0.415363[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door deuren";
				attribute<GJ_yr> PL (...) := bouwdelen/PL * 0.461675[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door paneel";
				attribute<GJ_yr> RO (...) := bouwdelen/RO * 1.097864[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door ramen onder";
				attribute<GJ_yr> RB (...) := bouwdelen/RB * 1.097864[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door ramen boven";
				attribute<GJ_yr> KR (...) := bouwdelen/KR * 0.060368[GJ_yr_m2] * Fitfactor, descr = "gefit warmteverlies bij isolatiegraad N1 door kieren";

				//========= gefit verlies totaal
				attribute<GJ_yr> Total (...) := ='add('+AsItemList(Classifications/bouwdeel/name)+')';
			}
		}


		
		container Functioneel := for_each_nedv(
				Classifications/FunctioneleVraag/name,
				'BaseValues/'+ Classifications/FunctioneleVraag/name,
				.,
				GJ_yr)
		{
			container RV_N1_per_Bouwdeel := warmteverlies_theoretisch_startjaar/RV_N1_per_Bouwdeel;
			attribute<ratio> Fitfactor_VT (..) := warmteverlies_theoretisch_startjaar/Fitfactor;

			container BaseValues := for_each_nedv(
				Classifications/FunctioneleVraag/name,

				Classifications/FunctioneleVraag/name == 'RV' ? 
				'nrAansluitingen_i * merge(SchilLabel_rel, GJ_yr_asl,'
					+ AsItemList('Invoer/Kengetallen/Bebouwing/Woning/Results/Asl/RV_'+Classifications/SchilLabel/name+'[ModelObject_rel]')+')'
					'+ Oppervlakte_i   * merge(SchilLabel_rel, GJ_yr_m2,'
					+ AsItemList('Invoer/Kengetallen/Bebouwing/Woning/Results/Opp/RV_'+Classifications/SchilLabel/name+'[ModelObject_rel]')+')'
					:
				Classifications/FunctioneleVraag/name == 'VT' ?
					'Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V_E_opp[InstallatiePerProduct/VT] * Oppervlakte_i'
					:
				'Invoer/Kengetallen/Bebouwing/'+Classifications/BebouwingsSector/name[BebouwingsSector_rel]+'/Results/Asl/'+Classifications/FunctioneleVraag/name+'[ModelObject_rel]* nrAansluitingen_i +
				 Invoer/Kengetallen/Bebouwing/'+Classifications/BebouwingsSector/name[BebouwingsSector_rel]+'/Results/Opp/'+Classifications/FunctioneleVraag/name+'[ModelObject_rel] * Oppervlakte_i',
				..,
				GJ_yr);
		}
		
			
		container InstallatiePerProduct := for_each_nedv(Classifications/Product/name
			, 'Classifications/GebouwOptie/PerProduct/'+Classifications/Product/name+'[GebouwOptie_rel]'
			, .
			, Classifications/Installatie)
		{
			container LastVervanging := for_each_nedv(
				Classifications/Product/name,
				'(uint16(Startjaar_jaar) - mod(uint16(Startjaar_jaar - Bouwjaar), Classifications/Installatie/Levensduur[InstallatiePerProduct/' + Classifications/Product/name + ']))[yr_uint16]',
				..,
				yr_uint16)
				{
					attribute<yr_uint16> KK (...) := (uint16(Startjaar_jaar) - mod(uint16(Startjaar_jaar - Bouwjaar), Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/Levensduur[InstallatiePerProduct/KK]))[yr_uint16];
					attribute<yr_uint16> VT (...) := (uint16(Startjaar_jaar) - mod(uint16(Startjaar_jaar - Bouwjaar), Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/Levensduur[InstallatiePerProduct/VT]))[yr_uint16];
					attribute<yr_uint16> DK (...) := (uint16(Startjaar_jaar) - mod(uint16(Startjaar_jaar - Bouwjaar), Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Levensduur[InstallatiePerProduct/DK]))[yr_uint16];
				}
				
			attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> KK (..) := Gasloos || isdefined(BestaandAflevergebied_rel) ? Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/V/Elek : Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/V/Gas;
			attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> VT (..) := const(Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Nat, ..);
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> DK (..) := const(Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/geen,..);

			attribute<Classifications/AfgifteSysteem> AfgifteSysteem_init (..) := const(Classifications/AfgifteSysteem/V/MTAS, ..);
			attribute<Classifications/AfgifteSysteem> AS (..) := max_elem(
				 AfgifteSysteem_init
				,Classifications/Performance/AfgifteSysteem_rel[SPF/PerformancePerProduct/RVb]
				,Classifications/Performance/AfgifteSysteem_rel[SPF/PerformancePerProduct/RVp]
			);
		}
		
		container Func2Meter := CalculationSchemes/FunctioneelToMetervraag(.);
		container BemeterdeGebouwInput_rel := for_each_nedv(Classifications/Product/name
			, 'rlookup(Classifications/Performance/Input_rel, Classifications/BemeterdeGebouwInput/nr_OrgEntity)[SPF/PerformancePerProduct/'+Classifications/Product/name+']'
			, .
			, Classifications/BemeterdeGebouwInput
			);

		container SPF := Func2Meter/SPF
		{
			container PerformancePerProduct := Func2Meter/SPF/PerformancePerProduct;
		}

		container Bouwdelen := BebouwingsObjectSrc/Bouwdelen
		{
			container BouwDeelVerliesFactor := for_each_nedv(
				Classifications/Bouwdeel/name,
				'Classifications/Bouwdeel/Verlies[Classifications/Bouwdeel/V/'+Classifications/Bouwdeel/name+'] * Bouwdelen/'+Classifications/Bouwdeel/name+'',
				(..),
				m2);
			
			
			attribute<ratio> Norm_verliesfactor (..) := ='add('+AsItemList('BouwDeelVerliesFactor/'+Classifications/Bouwdeel/name)+') / Totaal';

			container Isolatie := for_each_nedv(
					Classifications/bouwdeel/name,
					'makedefined(BebouwingsObjectSrc/Bouwdelen/Isolatie/'+Classifications/bouwdeel/name+', Classifications/schillabel/default_bouwdeelkwaliteit/'+Classifications/bouwdeel/name+'[Defaultlabel_rel])',
					..,
					Classifications/IsolatieNiveau);
		}
		
		container Kapitaallasten
		{
			//Aansluitbijdrages
			attribute<Eur_yr> Kji_Asl_Enet (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi_Asl_Enet (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kji_Asl_Gnet (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi_Asl_Gnet (results) := const(0[Eur_yr], results);

			//Investeringen
			attribute<Eur_yr> Kji30_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi30_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kji20_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi20_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kji15_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi15_LO (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kji_gv   (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi_gv   (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kj_gv_incentive (results) := const(0[Eur_yr], results);

			attribute<Eur_yr> Kji_LTAS (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Kmi_LTAS (results) := const(0[Eur_yr], results);

			//Subsidies
			attribute<Eur_yr> Oji_s_LO_30 (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Oji_s_LO_20 (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Oji_s_LO_15 (results) := const(0[Eur_yr], results);
			attribute<Eur_yr> Oji_s_gv    (results) := const(0[Eur_yr], results);			
		}

		// =============== attributen die ook per GebiedOptie kunnen wijzigen
		attribute<Classifications/WarmteOptie> WarmteOptie_rel := Classifications/GebouwOptie/WarmteOptie_rel [ GebouwOptie_rel ];

		unit<uint32> AfnameGebied := ..../AfnameGebied;
		attribute<AfnameGebied> AfnameGebied_rel := const((0 / 0)[AfnameGebied], results);
	}
	unit<uint8> ModelObjectKeyDomein;
	unit<uint32>   PreStartJaar := subset(Results/bouwjaar < Startjaar_jaar)
	{
		unit<uint32> buurt         := Invoer/RuimtelijkeData/StudieGebied/buurt;
		unit<uint32> Aflevergebied := Invoer/RuimtelijkeData/BestaandeWarmtenetten/Aflevergebied_data;
		
		attribute<Geography/rdc_meter>         point             := Results/point[nr_orgentity];
		attribute<Geography/rdc_meter>         geometry          := Results/geometry[nr_orgentity];
		attribute<string>                      code              := Results/code[nr_orgentity];
		attribute<string>                      label             := Results/label[nr_orgentity], DialogType = "labelText";
		attribute<buurt>                       Buurt_rel         := Results/Buurt_rel[nr_orgentity];
		attribute<Aflevergebied>               Aflevergebied_rel := Results/Aflevergebied_rel[nr_OrgEntity];
		attribute<BebouwingsTypeDomein>        BebouwingsType    := Results/BebouwingsType[nr_orgentity];
		attribute<units/yr_uint16>             Bouwjaar          := Results/Bouwjaar[nr_orgentity];
		attribute<units/yr_uint16>             Sloopjaar         := Results/Sloopjaar[nr_orgentity];
		attribute<Classifications/Eigendom>    Eigendom_rel      := Results/Eigendom_rel[nr_orgentity];
		attribute<ratio>                       ResterendNu       := const(1.0,.);
		attribute<ModelObjectKeyDomein>        ModelObjectKey    := Results/ModelObjectKey[nr_orgentity];
		attribute<nrAsl>                       nrAansluitingen_i := Results/nrAansluitingen_i[nr_orgentity];
		attribute<m2>                          Oppervlakte_i     := Results/Oppervlakte_i[nr_orgentity];
		attribute<pand_asl>                    pand_aandeel      := Results/pand_aandeel[nr_orgentity];
		attribute<Classifications/Schillabel>  Schillabel_rel    := Results/Schillabel_rel[nr_orgentity];
		attribute<Classifications/Schillabel>  Energielabel_rel  := SchilLabel_rel;
		attribute<Classifications/Schillabel>  Defaultlabel_rel  := Results/Defaultlabel_rel[nr_orgentity];
		attribute<Classifications/WarmteOptie> WarmteOptie_rel   := Results/WarmteOptie_rel[nr_orgentity];
		attribute<Classifications/Schillabel>  Startlabel_rel    := Results/Startlabel_rel[nr_orgentity];
		
		unit<uint8>  BebouwingsTypeDomein := Results/BebouwingsTypeDomein;
		unit<uint32> AfnameGebied         := Results/AfnameGebied;
		
		attribute<AfnameGebied>                AfnameGebied_rel   := Results/AfnameGebied_rel[nr_orgentity];
		attribute<Classifications/GebouwOptie> GebouwOptie_rel    := Results/GebouwOptie_rel[nr_orgentity];
		
		container Aansluitingen
		{
			attribute<nrAsl> GNet(PreStartJaar) :=				
				not(IsDefined(Aflevergebied_rel) && Aflevergebied/StartJaar[Aflevergebied_rel] <= Startjaar_jaar) && Results/bouwjaar[nr_orgentity] < 2025w // TODO: Check! 
				? nrAansluitingen_i
				: 0[nrAsl];
		}
		
		container Functioneel
		{
			container RV_N1_per_Bouwdeel := for_each_nedv(
				Classifications/Bouwdeel/name,
				'Results/Functioneel/RV_N1_per_Bouwdeel/'+Classifications/Bouwdeel/name+'[nr_orgentity]',
				..,
				GJ_yr);
			attribute<ratio> Fitfactor_VT (..) := Results/Functioneel/Fitfactor_VT[nr_orgentity];
			container BaseValues := for_each_nedv(
				Classifications/FunctioneleVraag/name,
				'Results/Functioneel/BaseValues/'+Classifications/FunctioneleVraag/name+'[nr_orgentity]',
				..,
				GJ_yr);
		}

		container BemeterdeGebouwInput_rel :=  for_each_nedv(
			classifications/Product/name,
			'Results/BemeterdeGebouwInput_rel/' + Classifications/Product/Name + '[nr_orgentity]',
			.,
			Classifications/BemeterdeGebouwInput );
		
		container SPF := for_each_nedv(
			classifications/Product/name,
			'Results/SPF/' + Classifications/Product/Name + '[nr_orgentity]',
			.,
			float64)
		{
			container PerformancePerProduct :=  for_each_nedv(
			classifications/Product/name,
			'Results/SPF/PerformancePerProduct/' + Classifications/Product/Name + '[nr_orgentity]',
			..,
			Classifications/Performance);
		}

		Container Bouwdelen := for_each_nedv(
			classifications/bouwdeel/name,
			'Results/Bouwdelen/' + Classifications/Bouwdeel/Name + '[nr_orgentity]',
			.,
			m2)
		{
			container LastVervanging := for_each_nedv(
				classifications/bouwdeel/name,
				'(uint16(Startjaar_jaar) - mod(uint16(Startjaar_jaar - Bouwjaar), classifications/bouwdeel/levensduur[/Classifications/Bouwdeel/V/' +  /Classifications/Bouwdeel/name + ']))[yr_uint16]',
				..,
				yr_uint16);
			container Isolatie := for_each_nedv(
				classifications/bouwdeel/name,
				'makedefined( BebouwingsObjectSrc/Bouwdelen/Isolatie/'+classifications/bouwdeel/name+'[nr_orgentity]
				 , Classifications/schillabel/default_bouwdeelkwaliteit/'+classifications/bouwdeel/name+'[Defaultlabel_rel])',
				..,
				Classifications/IsolatieNiveau);
			container IsChangedNow := for_each_nedv(
				classifications/bouwdeel/name,
				'const(false,...)',
				..,
				bool);
		}
		
		container Gebied
		{
			attribute<float64> n      (..) := Results/Gebied/n[nr_orgentity];
			attribute<float64> MEAN_x (..) := Results/Gebied/MEAN_x[nr_orgentity];
			attribute<float64> MEAN_y (..) := Results/Gebied/MEAN_y[nr_orgentity];
			attribute<float64> SSD_xx (..) := Results/Gebied/SSD_xx[nr_orgentity];
			attribute<float64> SSD_xy (..) := Results/Gebied/SSD_xy[nr_orgentity];
			attribute<float64> SSD_yy (..) := Results/Gebied/SSD_yy[nr_orgentity];
		}
		
		container Kapitaallasten
		{
			attribute<Eur_yr> Kji_Asl_Enet    (..) := Results/Kapitaallasten/Kji_Asl_Enet[nr_orgentity];
			attribute<Eur_yr> Kmi_Asl_Enet    (..) := Results/Kapitaallasten/Kmi_Asl_Enet[nr_orgentity];
			attribute<Eur_yr> Kji_Asl_Gnet    (..) := Results/Kapitaallasten/Kji_Asl_Gnet[nr_orgentity];
			attribute<Eur_yr> Kmi_Asl_Gnet    (..) := Results/Kapitaallasten/Kmi_Asl_Gnet[nr_orgentity];
			attribute<Eur_yr> Kji30_LO        (..) := Results/Kapitaallasten/Kji30_LO[nr_orgentity];
			attribute<Eur_yr> Kmi30_LO        (..) := Results/Kapitaallasten/Kmi30_LO[nr_orgentity];
			attribute<Eur_yr> Kji20_LO        (..) := Results/Kapitaallasten/Kji20_LO[nr_orgentity];
			attribute<Eur_yr> Kmi20_LO        (..) := Results/Kapitaallasten/Kmi20_LO[nr_orgentity];
			attribute<Eur_yr> Kji15_LO        (..) := Results/Kapitaallasten/Kji15_LO[nr_orgentity];
			attribute<Eur_yr> Kmi15_LO        (..) := Results/Kapitaallasten/Kmi15_LO[nr_orgentity];
			attribute<Eur_yr> Kji_gv          (..) := Results/Kapitaallasten/Kji_gv[nr_orgentity];
			attribute<Eur_yr> Kmi_gv          (..) := Results/Kapitaallasten/Kmi_gv[nr_orgentity];
			attribute<Eur_yr> Kj_gv_incentive (..) := Results/Kapitaallasten/Kj_gv_incentive[nr_orgentity];
			attribute<Eur_yr> Kji_LTAS        (..) := Results/Kapitaallasten/Kji_LTAS[nr_orgentity];
			attribute<Eur_yr> Kmi_LTAS        (..) := Results/Kapitaallasten/Kmi_LTAS[nr_orgentity];
			attribute<Eur_yr> Oji_s_LO_30     (..) := Results/Kapitaallasten/Oji_s_LO_30[nr_orgentity];
			attribute<Eur_yr> Oji_s_LO_20     (..) := Results/Kapitaallasten/Oji_s_LO_20[nr_orgentity];
			attribute<Eur_yr> Oji_s_LO_15     (..) := Results/Kapitaallasten/Oji_s_LO_15[nr_orgentity];
			attribute<Eur_yr> Oji_s_gv        (..) := Results/Kapitaallasten/Oji_s_gv[nr_orgentity];
		}
		
		container InstallatiePerProduct := for_each_nedv(Classifications/Product/name
		, 'Results/InstallatiePerProduct/'+Classifications/Product/name+'[nr_orgentity]'
		, .
		, Classifications/Installatie)
		{
			container LastVervanging := for_each_nedv(
				Classifications/Product/name,
				'Results/InstallatiePerProduct/LastVervanging/'+Classifications/Product/name+'[nr_orgentity]',
				..,
				yr_uint16)
				{
					attribute<yr_uint16> KK (...) := Results/InstallatiePerProduct/LastVervanging/KK[nr_orgentity];
					attribute<yr_uint16> VT (...) := Results/InstallatiePerProduct/LastVervanging/VT[nr_orgentity];
					attribute<yr_uint16> DK (...) := Results/InstallatiePerProduct/LastVervanging/DK[nr_orgentity];
					attribute<yr_uint16> AS (...) := Results/InstallatiePerProduct/LastVervanging/AS[nr_orgentity];
				}
			
			attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> KK (..) := Results/InstallatiePerProduct/KK[nr_orgentity];
			attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> VT (..) := Results/InstallatiePerProduct/VT[nr_orgentity];
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> DK (..) := Results/InstallatiePerProduct/DK[nr_orgentity];
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> AS (..) := Results/InstallatiePerProduct/DK[nr_orgentity];
		}
	}
}
