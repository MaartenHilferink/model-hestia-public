//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2022 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

	template NTA8800
	{
		//begin parameters
		unit<uint32> ObjectDomain;
		//end parameters

		parameter<Celsius> DT_SetPointTemp_def := 18[Celsius] - 6[Celsius], Source = "Energiebesparingsmethode TNO v3 binnentemperatuur";
		parameter<Celsius> DT_SetPointTemp_NTA := 20[Celsius] - 6[Celsius], Source = "NTA8800 Tabel 7.11 woonfuncties";

		parameter<ratio>   SetPointTemp_correctie := DT_SetPointTemp_NTA / DT_SetPointTemp_def;

		attribute<ratio> Emissiefactor (Classifications/BemeterdeGebouwInput) : [
			  1.450	//elek
			, 1.000	//gas
			, 0.000	//H2
			, 0.000	//biomass
			, 1.000	//olie
			, 0.000	//pellets
			], Source = "NTA8800 2020+A1 5.5.5 Tabel 5.2";
		parameter<ratio> Emissiefactor_warmte : [0.9];

		//========= warmteverlies per bouwdeel als functie van oppervlak van bouwdeel en waarde horende bij isolatiegraad
		container warmteverlies := for_each_nedv(
			classifications/Bouwdeel/name,
			replace('ObjectDomain/bouwdelen/@BD@ * merge(uint8(ObjectDomain/bouwdelen/isolatie/@BD@), GJ_yr_m2,' + AsItemList('Invoer/Kengetallen/WarmteVraag/Vrv_opp_'+Classifications/IsolatieNiveau/name+'[Classifications/Bouwdeel/V/@BD@]')+')', '@BD@', classifications/Bouwdeel/name),
			ObjectDomain,
			GJ_yr)
		{
			attribute<GJ_yr> Vrv_VT (ObjectDomain) := Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V_RV_asl[OverigeInstallaties/Ventilatie/Installatietype_rel] * BO/nrAansluitingen[ObjectDomain/BO_rel];
			attribute<GJ_yr> Totaal (ObjectDomain) := ='SetPointTemp_correctie * (add('+AsItemList(Classifications/Bouwdeel/name)+') + Vrv_VT)';
		}

		container warmtewinst
		{
			//============ warmtewinst door personen wordt bepaald als constante
			attribute<GJ_yr> warmtewinst_personen         (ObjectDomain) := const(Invoer/Kengetallen/Warmtevraag/Warmtewinst_personen,ObjectDomain);

			//============ warmtewinst door apparaten wordt gelijkgesteld aan de vraag naar elektriciteit voor elektrische apparatuur
			attribute<GJ_yr> warmtewinst_apparaten        (ObjectDomain) := ObjectDomain/Functioneel/EA * Invoer/Kengetallen/Warmtevraag/EA_winst_nuttig;

			//============ warmtewist door zoninstralen door ramen boven (RB) en onder (RO) als functie van oppervlak bouwdeel en waarde horende bij isolatiegraad
			attribute<GJ_yr> warmtewinst_zoninstraling_RB (ObjectDomain) := ='ObjectDomain/bouwdelen/RB * merge(uint8(ObjectDomain/bouwdelen/isolatie/RB), GJ_yr_m2,'+ AsItemList('Invoer/Kengetallen/Warmtevraag/Zoninstraling[Classifications/IsolatieNiveau/V/'+Classifications/IsolatieNiveau/name+']')+')', descr = "warmtewinst ramen boven";
			attribute<GJ_yr> warmtewinst_zoninstraling_RO (ObjectDomain) := ='ObjectDomain/bouwdelen/RO * merge(uint8(ObjectDomain/bouwdelen/isolatie/RO), GJ_yr_m2,'+ AsItemList('Invoer/Kengetallen/Warmtevraag/Zoninstraling[Classifications/IsolatieNiveau/V/'+Classifications/IsolatieNiveau/name+']')+')', descr = "warmtewinst ramen onder";
			attribute<GJ_yr> warmtewinst_zoninstraling    (ObjectDomain) := warmtewinst_zoninstraling_RO + warmtewinst_zoninstraling_RB;	

			//============ totaal warmtewinsten
			attribute<GJ_yr> Totaal                       (ObjectDomain) := min_elem(warmtewinst_personen + warmtewinst_apparaten + warmtewinst_zoninstraling, Invoer/Kengetallen/WarmteVraag/Max_warmtewinst * warmteverlies/totaal);
		}
		
		unit<uint32> Obs := ObjectDomain
		{
			container Functioneel := ObjectDomain/Functioneel
			{
				attribute<gj_yr> RV (ObjectDomain) := warmteverlies/Totaal - warmtewinst/Totaal;
				attribute<gj_yr> TW (ObjectDomain) := (Func2Meter/metervraag_per_product/TWb + Func2Meter/metervraag_per_product/TWp) / SpecifiekeInstellingen/RuimtelijkeVraag/Gedrag/TW;
				attribute<gj_yr> KD (ObjectDomain) := (Func2Meter/metervraag_per_product/KDb + Func2Meter/metervraag_per_product/KDp) / SpecifiekeInstellingen/RuimtelijkeVraag/Gedrag/KD / ( 1.0 + 3.66 *(1.0 - BO/Functioneel_base/Klimaateffect[ObjectDomain/BO_rel] ));
				attribute<gj_yr> EA (ObjectDomain) := Func2Meter/eEffect/Vj_elek + ObjectDomain/Functioneel/EA / Invoer/Kengetallen/Constanten/Efficiency_EA / SpecifiekeInstellingen/RuimtelijkeVraag/Gedrag/EA;
			}
		}

		container Func2meter_NTA := CalculationSchemes/FunctioneelToMetervraag(Obs, false);

		container Primair_kWh := for_each_nedv(
			Classifications/BemeterdeGebouwInput/name
			, 'Func2meter_NTA/result/'+Classifications/BemeterdeGebouwInput/name+' * 277.78 [kWh / GJ] * Emissiefactor[Classifications/BemeterdeGebouwInput/V/'+Classifications/BemeterdeGebouwInput/name+']'
			, ObjectDomain
			, kWh_yr
			)
		{
			attribute<kWh_yr>    Warmte (ObjectDomain) := BO/Aansluitingen/Warmtenet[ObjectDomain/BO_rel] ? Emissiefactor_warmte * 277.78 [kWh / GJ] * Obs/Functioneel/RV : 0.0[kWh_yr];
			attribute<kWh_yr>    Total  (ObjectDomain) := ='add('+AsItemList(Classifications/BemeterdeGebouwInput/name)+', Warmte )';
			attribute<kwh_yr_m2> Kwh_m2 (ObjectDomain) := BO/Oppervlakte[ObjectDomain/BO_rel] == 0[m2] ? 0.0[kwh_yr_m2] : Total / BO/Oppervlakte[ObjectDomain/BO_rel];
		}
		attribute<Classifications/Schillabel> Energielabel_rel (ObjectDomain) := Primair_kWh/Kwh_m2 <= 0.0[kwh_yr_m2] ? Classifications/Schillabel/V/A : classify(Primair_kWh/Kwh_m2, classifications/Schillabel/classbreak);
	}