//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template ModelObjectKentallenImport 
{
	// begin case parameters
	parameter<string>                      FileName;
	unit<uint8>                            model_type;
	unit<uint8>                            bouwjaarindeling;
	parameter<Classifications/GebouwOptie> GebouwOptie;
	// end case parameters

	// Ki_SXY_[min/max]_[asl/opp]

	unit<uint32> Table: StorageName = "='%EnergieDataProjDir%/'+ FileName"
		, StorageType     = "gdal.vect"
		, StorageReadOnly = "True";

	unit<uint32> Results := Table
	{
		attribute<string> label := trim(type_str) + ', ' + trim(table/BouwJaar_str), DialogType = "labelText";

		unit<uint8> ModelObjectKeyDomein := combine_unit_uint8(model_type, bouwjaarindeling);

		attribute<bouwjaarindeling>     BouwJaar_rel    := rlookup(trim(Table/BouwJaar_str ), bouwjaarindeling/excel_code);
		attribute<model_type>           ModelType_rel   := rlookup(trim(type_str), model_type/Excel_code);
		attribute<ModelObjectKeyDomein> ModelObjectKey  := combine_data(ModelObjectKeyDomein, ModelType_rel, BouwJaar_rel);
	
		attribute<classifications/Schillabel> Schillabel_rel := rlookup(Table/Default_label, Classifications/Schillabel/name);

		container Asl := for_each_nedv(
				'RV_' + Classifications/Schillabel/name,
				'table/Vrv_'+Classifications/Schillabel/name+'_asl[GJ_yr_asl]',
				.,
				GJ_yr_asl)
		{
			attribute<GJ_yr_asl> TW (Results) := table/VTW_asl[GJ_yr_asl];
			attribute<GJ_yr_asl> VT (Results) := table/VVT_asl[GJ_yr_asl];
			attribute<GJ_yr_asl> KD (Results) := table/VKD_asl[GJ_yr_asl];
			attribute<GJ_yr_asl> EA (Results) := table/VEA_asl[GJ_yr_asl];
			attribute<GJ_yr_asl> KK (Results) := table/VKK_asl[GJ_yr_asl];
		}
		container Opp := for_each_nedv(
				'RV_' + Classifications/Schillabel/name,
				'table/Vrv_'+Classifications/Schillabel/name+'_opp[GJ_yr_m2]',
				.,
				GJ_yr_m2)
		{
			attribute<GJ_yr_m2> TW (Results) := table/VTW_opp[GJ_yr_m2];
			attribute<GJ_yr_m2> VT (Results) := table/VVT_opp[GJ_yr_m2];
			attribute<GJ_yr_m2> KD (Results) := table/VKD_opp[GJ_yr_m2];
			attribute<GJ_yr_m2> EA (Results) := table/VEA_opp[GJ_yr_m2];
			attribute<GJ_yr_m2> KK (Results) := table/VKK_opp[GJ_yr_m2];
		}
		
		attribute<Classifications/GebouwOptie> StartOptie_rel := const(GebouwOptie, .);
	}
}