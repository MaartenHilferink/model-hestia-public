//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container HestiaRun
{
		// Ophalen eenheden, gebiedsafbakeningen en typeringen.
	#include <%projDir%/model/Units.dms>
	#include <%projDir%/model/Geography.dms>
	#include <%projDir%/model/Classifications.dms>

	// Invoer: hier kunnen meerdere rekenstappen gedefinieerd worden.	
	unit<uint8> rekenstap: nrofrows = 21, IsHidden = "True"
	{
		attribute<units/yr_uint16> Jaar  := (uint16(2000) + uint16(id(.)))[units/yr_uint16];

		attribute<string>          label := string(id(.))+'_'+string(Jaar);
		attribute<string>          name  := id(.) == 0b ? 'StartJaar' : 'R' + label; 

		unit<uint8> repeats  := subset(id(rekenstap) != 0b && id(rekenstap) != uint8(1)), IsHidden = "True"
		{
			attribute<string>name:=rekenstap/name[nr_orgentity];
		}
		template Rx_xxxx := R1_2001, IsHidden = "True";
	}	
	
	container Invoer : Using = "Units"
	{
		// Invoer: Geografische selectie welke gebied wordt onderzocht.

		// Volledig Nederland zonder selectie. Comment uit indien een andere optie gekozen wordt.
			parameter<string>   StudieGebied : ['GM0050'];


		// Enkele gemeente als selectie. Comment in om te gebruiken.
		//	parameter<string>   StudieGebied : ['GM0050']; //GM0050 (Zeewolde) is handig om kleinschalig te testen OF GM0213 (meer oudere gebouwen)

		//Meerdere gemeenten als studiegebied. Comment in om te gebruiken.
		//	parameter<string>   StudieGebied : ['GM0402,GM0344,GM1581,GM0439,GM0153,GM0599,GM0034,GM0050,GM0321'];

	    // RES-regio als selectie. Comment in om te gebruiken.
		//	parameter<string>   RES_Gebied   : ['RESTwente'];
		//	parameter<string>   StudieGebied :=
		//	Geography/RegioIndelingen/Energieregio/GM_code_list[rlookup(RES_Gebied, Geography/RegioIndelingen/Energieregio/name)];

		parameter<bool> StartgegevensAan := true, Descr = "Worden invoer voor isolatieniveaus en gebouwopties meegenomen?";

		container DefaultInstellingen
		{
			// Ophalen opties voor instellingen die per rekenstap gebruikt kunnen worden.
			#include <%projDir%/Runs/DefaultSettings/Basis.dms>
			#include <%projDir%/Runs/DefaultSettings/Rekenstap.dms>		
		}
		
		container SpecifiekeInstellingen := DefaultInstellingen/Basis
		{
			// Invoer: welke energieprijzenbestanden worden gebruikt.
			parameter<string> Energieprijzenbron       := '20210326_Energieprijzen_KEV2019',
				Descr = "Energieprijzen in het basispad van de Klimaat en Energie Verkenning 2019 (PBL)", IsHidden = "True";
			
			// Invoer: worden bestaande warmtenetten meegenomen JA/NEE.
			parameter<bool>   HasStartingArcSet := false, IsHidden = "True";
			
			// Invoer: Per rekenstap worden specifieke instellingen gebruikt.
			// De lijst van rekenstappen wordt gedefinieerd bij rekenstap.
			
			container RekenStappen := for_each_nt(rekenstap/repeats/name, rekenstap/Rx_xxxx)
			{
				container StartJaar := DefaultInstellingen/Basis;
				container R1_2001   := DefaultInstellingen/Rekenstap/Specifiek;
			}
		}
		// Ophalen ruimtelijke invoerbestanden, kengetallen en energieprijzen.
		#include <%projDir%/model/RuimtelijkeData.dms>
		#include <%projDir%/model/Kengetallen.dms>
		#include <%projDir%/model/EnergiePrijzen.dms>

		
		container TechnischeInstellingen: IsHidden = "True" {
			parameter<uint32> RandomSeed := 1;
			parameter<uint32> TileSize := 256*256;
			parameter<uint32> NrProcessors := 20;
			parameter<uint32> ThisProcessor := 3;			
		}
	}

	// Ophalen overige rekenschemas.
	#include <%projDir%/model/stam.dms>
	#include <%projDir%/model/BeginSituatie.dms>
	#include <%projDir%/model/TussenResultaten.dms>
	#include <%projDir%/model/Resultaten.dms>
	#include <%projDir%/model/ConfigSettings.dms>
	#include <%projDir%/model/ExportSettings.dms>
	unit<uint8> Tellingen := select_orgrel(ID(classifications/zichtjaar) < 51b) // voor telling testen niet altijd alle jaren nodig
	{
		attribute<string> name := org_rel->name;
		attribute<uint32> BO                    := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BO')+')';
		attribute<units/nrAsl> BO_asl           := ='union_data(., '+AsItemList('sum(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BO/nrAansluitingen)')+')';
		attribute<uint32> ProductActieveWoning  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning')+')';
		attribute<uint32> BouwdeelActieveWoning := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning')+')';
		attribute<uint32> OptiesHere            := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/OptiesHere')+')';
		attribute<uint32> DubbelActief          := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelActief')+')';
		attribute<uint32> DA_xIsolatieAmbitie   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelActief/xIsolatieAmbitie')+')';
		attribute<uint32> EnkelProductActief    := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelInactief')+')';
		attribute<uint32> PA_xIsolatieAmbitie   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/xIsolatieAmbitie')+')';
		attribute<uint32> BA_AmbitieBerekening  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/AmbitieBerekening')+')';
		attribute<uint32> EnkelBouwdeelActief   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/ProductInactieveBO')+')';
		attribute<uint32> EBA_AmbitieBerekening := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/ProductInactieveAmbitie')+')';
		attribute<uint32> ActieveWoning         := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning')+')';
		attribute<units/nrAsl> A_asl            := ='union_data(., '+AsItemList('sum( /TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/BO_rel->nrAansluitingen)')+')';
		attribute<uint32> A_xInvesteringsOptie  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xInvesteringsOptie')+')';
		attribute<uint32> A_xGebouwOptie        := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xGebouwOptie')+')';
		attribute<uint32> A_GeschikteOptie      := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/GeschikteOptie')+')';
		
		attribute<uint32> A_Zonder_xIO          := ='ActieveWoning        - union_data(., '+AsItemList('sum_uint32(pcount(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xInvesteringsOptie/ActieveWoning_rel )>0)')+')';
		attribute<uint32> AxIO_Zonder_GO        := ='A_xInvesteringsOptie - union_data(., '+AsItemList('sum_uint32(pcount(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/GeschikteOptie/xInvesteringsOptie_rel)>0)')+')';
		
	}
}
