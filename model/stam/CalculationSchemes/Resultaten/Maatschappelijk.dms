//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Maatschappelijk: Source = "FO v7a C6", isHidden = "true"
{
	container impl: IsHidden = "true"
	{
		attribute<string> BronExpr(Classifications/GebiedsOptie) :=
				+replace(
					Classifications/GebiedsOptie/IsPlanregioOptie
					? 'StateNaAllocatie/Flow/Kmi_Total * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@RO@)'
					: 'StateNaAllocatie/@RO@/Kmi_Totaal'
				, '@RO@', Classifications/GebiedsOptie/name);
	}
	container gebouwen
	{
		container WaterstofVerbruik :=
				for_each_nedv(Classifications/BebouwingsSector/name, 
					replace(
						'sum(Allocatie/@BC@/BO/jaarlijks/Kj_H2, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container ElektriciteitsVraag :=
				for_each_nedv(Classifications/BebouwingsSector/name, 
					replace(
						'sum(Allocatie/@BC@/Elektriciteit/Maatschappelijk, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container AardGasVerbruik :=
				for_each_nedv(Classifications/BebouwingsSector/name,
					replace(
						'sum(Allocatie/@BC@/AardGas/Maatschappelijk, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container GebouwVerbetering :=
				for_each_nedv(Classifications/BebouwingsSector/name,
					replace(
						'sum(Allocatie/@BC@/BO/KapitaalLasten/Kmi_gv, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container WoningTellingen_PPR {
			container BouwdeelAreaalPerIsolatieniveau := for_each_nedv(Classifications/BouwdeelIsolatie/name
			,	replace('sum(Allocatie/Woning/BO/Bouwdelen/@BD * Float64(Allocatie/Woning/BO/Bouwdelen/Isolatie/@BD == Classifications/IsolatieNiveau/V/@IN), BebouwingsComponenten/Woning/results/PlanRegio_rel)'
				,	'@BD', Classifications/BouwdeelIsolatie/bouwdeel_name
				,	'@IN', Classifications/BouwdeelIsolatie/isolatieniveau_name)
			,	PlanRegio, m2
			);			
			container RV_Installatie := for_each_nedv(Classifications/Installatie/name
			,	replace('sum(UInt32(Allocatie/Woning/BO/InstallatiePerProduct/RVb == Classifications/Installatie/V/@IN), BebouwingsComponenten/Woning/results/PlanRegio_rel)'
				,	'@IN', Classifications/Installatie/name)
			,	PlanRegio, uint32
			);			
		}
		container WoningTellingen_NL {
			unit<uint32> BO := Allocatie/Woning/BO;
			// TODO: ook per woning en relatief (2x)
			// TODO: 1 regel per jaar, let op niet vasthouden tussenresultaten, en obv begin- en eindjaar.
			container BouwdeelAreaalPerIsolatieniveau := for_each_nedv(Classifications/BouwdeelIsolatie/name
			,	replace('sum(BO/Bouwdelen/@BD * Float64(BO/Bouwdelen/Isolatie/@BD == Classifications/IsolatieNiveau/V/@IN))'
				,	'@BD', Classifications/BouwdeelIsolatie/bouwdeel_name
				,	'@IN', Classifications/BouwdeelIsolatie/isolatieniveau_name)
			,	void, m2
			);			
			
			// voor iedere unieke combinatie van InstallatiePerProduct
			// (RVb RVp TWb TWp KDb KDp KK VT)  #woningen FV/RV FV/TW FV/KD FV/KK FV/VT
			// VR VR VR VR geen geen fornuis geen   6000000   veel beetje geen beetje geen
			container RV_Installatie := for_each_nedv(Classifications/Installatie/name
			,	replace('sum(UInt32(BO/InstallatiePerProduct/RVb == Classifications/Installatie/V/@IN))'
				,	'@IN', Classifications/Installatie/name)
			,	void, uint32
			);			
			
			unit<uint32> I := Classifications/Installatie;
			unit<uint32> II := combine(I, I);
			
			attribute<II> InstallatieGetalRV_rel(BO) := combine_data(II, BO/InstallatiePerProduct/RVb, BO/InstallatiePerProduct/RVp);
			attribute<II> InstallatieGetalTW_rel(BO) := combine_data(II, BO/InstallatiePerProduct/TWb, BO/InstallatiePerProduct/TWp);
			attribute<II> InstallatieGetalKD_rel(BO) := combine_data(II, BO/InstallatiePerProduct/KDb, BO/InstallatiePerProduct/KDp);

			unit<uint32> InstallatieGetalOV := combine(Classifications/AfgifteSysteem
					, Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes 
					, Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes 
					, Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes 
			);
			
			attribute<uint32> InstallatieGetalOV_rel(BO) := 
				combine_data(InstallatieGetalOV, 
					BO/InstallatiePerProduct/AS, 
					combine_data(combine(Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes, Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes, Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes)
					,	BO/InstallatiePerProduct/VT
					,	combine_data(combine(Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes, Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes)
						,	BO/InstallatiePerProduct/DK
						,	BO/InstallatiePerProduct/KK
						)
					)
				);

			unit<uint32> Voorkomend_InstallatieGetalRV := unique(InstallatieGetalRV_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalRV_rel, values); }
			unit<uint32> Voorkomend_InstallatieGetalTW := unique(InstallatieGetalTW_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalTW_rel, values); }
			unit<uint32> Voorkomend_InstallatieGetalKD := unique(InstallatieGetalKD_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalKD_rel, values); }
			unit<uint32> Voorkomend_InstallatieGetalOV := unique(InstallatieGetalOV_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalOV_rel, values); }
			
			unit<uint32> InstallatieGetal := combine(Voorkomend_InstallatieGetalRV
					, Voorkomend_InstallatieGetalTW
					, Voorkomend_InstallatieGetalKD
					, Voorkomend_InstallatieGetalOV
			);
			
			attribute<uint32> InstallatieGetal_rel(BO) := 
				combine_data(InstallatieGetal, 
					Voorkomend_InstallatieGetalRV/per_BO, 
					combine_data(combine(Voorkomend_InstallatieGetalTW , Voorkomend_InstallatieGetalKD, Voorkomend_InstallatieGetalOV)
					,	Voorkomend_InstallatieGetalTW/per_BO
					,	combine_data(combine(Voorkomend_InstallatieGetalKD, Voorkomend_InstallatieGetalOV)
						,	Voorkomend_InstallatieGetalKD/per_BO
						,	Voorkomend_InstallatieGetalOV/per_BO
						)
					)
				);
			unit<uint32> Voorkomend_InstallatieGetal := unique(InstallatieGetal_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetal_rel, values); }
			
			// evenzo voor iedere voorkomende combinatie van Bouwdelen: 4^10
			attribute<uint64> BouwdeelGetal(BO) := =repeat('(', #Classifications/Bouwdeel) + 'UInt64(0)'+AsList(replace('*UInt64(4)+UInt64(BO/Bouwdelen/Isolatie/@BD))', '@BD', Classifications/Bouwdeel/name), '');
			unit<uint32> VoorkomendBouwdeelGetal := unique( BouwdeelGetal )  { attribute<.> per_BO(BO) := rlookup(BouwdeelGetal, values); }
		}
		attribute<Eur>    Ki_GebouwVerbetering  (PlanRegio) := ='add('+AsItemList('sum(Allocatie/'+Classifications/BebouwingsSector/name+'/BO/eenmalig/Ki_gv, BebouwingsComponenten/'+Classifications/BebouwingsSector/name+'/results/PlanRegio_rel)')+')';
		attribute<Eur_yr> Kmi_GebouwVerbetering (PlanRegio) := ='add('+AsItemList('sum(Allocatie/'+Classifications/BebouwingsSector/name+'/BO/KapitaalLasten/Kmi_gv, BebouwingsComponenten/'+Classifications/BebouwingsSector/name+'/results/PlanRegio_rel)')+')';
		attribute<Eur_yr> Kmi_Totaal            (PlanRegio) := ElektriciteitsVraag/Km_Totaal + AardGasVerbruik/Km_Totaal + Kmi_GebouwVerbetering;
	}
	container LokaleEnergieProductie
	{
		attribute<Eur>    Ki_Totaal30  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal30')+')';
		attribute<Eur>    Ki_Totaal20  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal20')+')';
		attribute<Eur>    Ki_Totaal15  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal15')+')';
		attribute<Eur>    Ki_TotaalLTAS(PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_TotaalLTAS')+')';
		attribute<Eur>    Ki_Totaal    (PlanRegio) := Ki_Totaal30 + Ki_Totaal20 + Ki_Totaal15;
		attribute<Eur_yr> Kj_Onderhoud (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Kj_Onderh_excl')+')';
		attribute<Eur_yr> Kj_Admin     (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Kj_admin_excl')+')';
		attribute<_yr>    ann_30       (Planregio) := const(NCW/mr30/AnnualisationFactor, planregio);
		attribute<_yr>    ann_20       (Planregio) := const(NCW/mr20/AnnualisationFactor, planregio);
		attribute<_yr>    ann_15       (Planregio) := const(NCW/mr15/AnnualisationFactor, planregio);
		attribute<Eur_yr> Kmi_30       (PlanRegio) := Ki_Totaal30 * NCW/mr30/AnnualisationFactor;
		attribute<Eur_yr> Kmi_20       (PlanRegio) := Ki_Totaal20 * NCW/mr20/AnnualisationFactor;
		attribute<Eur_yr> Kmi_15       (PlanRegio) := Ki_Totaal15 * NCW/mr15/AnnualisationFactor;
		attribute<Eur_yr> Kmi_LTAS     (PlanRegio) := Ki_TotaalLTAS * NCW/mr30/AnnualisationFactor;
		attribute<Eur_yr> Kmi_Totaal   (PlanRegio) := Ki_Totaal30 * NCW/mr30/AnnualisationFactor + Ki_Totaal20 * NCW/mr20/AnnualisationFactor + Ki_Totaal15 * NCW/mr15/AnnualisationFactor+ Kj_Onderhoud + Kj_Admin;
	}
	container net
	{
		attribute<Eur_yr> Kj_gasnet_netto  (PlanRegio) := netwerken/aardgas/Kj_netto;
		attribute<Eur_yr> Kj_eleknet_netto (PlanRegio) := netwerken/elektriciteit/Kj_netto;
	}
	container Gebiedopties_Km
	{
		attribute<Eur_yr> Km_id_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Km_id_gas;
		attribute<Eur_yr> Km_id_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Km_id_elek;
		attribute<Eur_yr> Kj_id_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kj_id_oh;
		attribute<Eur_yr> Kj_id_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kj_id_adm;
		attribute<Eur_yr> Km_ow_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_gas;
		attribute<Eur_yr> Km_ow_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_elek;
		attribute<Eur_yr> Kj_ow_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_oh;
		attribute<Eur_yr> Kj_ow_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_adm;
		attribute<Eur_yr> Kj_ow_productie (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_productie;
		attribute<Eur_yr> Km_wd_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_gas;
		attribute<Eur_yr> Km_wd_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_elek;
		attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_oh;
		attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_adm;
		attribute<Eur_yr> Kj_pt_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_oh;
		attribute<Eur_yr> Kj_pt_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_adm;
		attribute<Eur_yr> totaal          (PlanRegio) := 
			  Km_id_gas + Km_id_elek + Kj_id_oh + Kj_id_adm                   //kosten ID
			+ Km_ow_gas + Km_ow_elek + Kj_ow_oh + Kj_ow_adm + Kj_ow_productie //kosten OW
			+ Km_wd_gas + Km_wd_elek + Kj_wd_oh + Kj_wd_adm                   //kosten WD
			+ Kj_pt_oh + Kj_pt_adm;                                           //kosten PT
	}
	container Gebiedopties_Kmi
	{
		attribute<Eur_yr> Kmi_ge_pm (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_pm, Descr = "Maatschappelijke kosten investering projectmanagement";
		attribute<Eur_yr> Kmi_ge_ov (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_ov, Descr = "Maatschappelijke kosten investering ongeriefsvergoedingen";
		attribute<Eur_yr> Kmi_id    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kmi_id,    Descr = "Maatschappelijke kosten investering inpandige distributie";
		attribute<Eur_yr> Kmi_pt    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kmi_pt,    Descr = "Maatschappelijke kosten investering primair transport";
		attribute<Eur_yr> Kmi_ow    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kmi_ow,    Descr = "Maatschappelijke kosten investering opwekking";
		attribute<Eur_yr> totaal    (PlanRegio) := Kmi_ge_pm + Kmi_ge_ov + Kmi_id + Kmi_pt + Kmi_ow;
	}
	attribute<Eur_yr> Om_Comfort (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Om_ge_comfort;
	attribute<Eur_yr> Kmi_Totaal (PlanRegio) := net/Kj_gasnet_netto + net/Kj_eleknet_netto + gebouwen/Kmi_Totaal + LokaleEnergieProductie/Kmi_Totaal + Gebiedopties_Km/totaal + Gebiedopties_Kmi/totaal;
}