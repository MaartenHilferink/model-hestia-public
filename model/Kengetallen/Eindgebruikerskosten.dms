
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2022 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

	container Eindgebruikerskosten
	{
		unit<uint32> huurakkoord_vergoeding : StorageName = "%projDir%/Eindgebruikerskosten/huurakkoord_vergoeding.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
		{
			//====== primary key voor opzoeken waarden in tabel
			attribute<string> code := huidig_label +  '_' + doel_label + '_' + oppervlak;

			parameter<m2> grens_KM := 70[m2], Descr = "klassegrens kleine woning naar middelgrote woning";
			parameter<m2> grens_MG := 90[m2], Descr = "klassegrens middelgrote woning naar grote woning";

			//====== jaarlijkse huurverhoging conform sociaal huurakkoord per sprong
			attribute<eur_yr> Oj_hv := 12d * float64(vergoeding) * 1.0[eur_yr];
		}

		unit<uint32> huurpunten_labelsprong : StorageName = "%projDir%/Eindgebruikerskosten/huurpunten_labelsprong.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
		{
			//====== primary key voor opzoeken waarden in tabel
			attribute<string> code := huidig_label +  '_' + doel_label + '_' + woningtype;

			//====== verhoging aantal huurpunten per sprong
			attribute<uint32> punten := uint32(huurpunten);
		}

		unit<uint32> huurpunten_maxhuur : StorageName = "%projDir%/Eindgebruikerskosten/huurpunten_maxhuur.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
		{
			//====== primary key voor opzoeken waarden in tabel
			attribute<string> code := huurpunten;

			//====== jaarlijkse maximum huur conform huurpuntenstelsel
			attribute<eur_yr> Oj_huur := 12d * float64(huur_per_maand) * 1.0[eur_yr];
		}

		unit<uint32> rentepercentages : StorageName = "%projDir%/Eindgebruikerskosten/rentepercentages.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
		{
			unit<uint8> PerJaar := Classifications/Rekenjaar
			{
				attribute<rentepercentages> rentepercentages_rel := rlookup(string(Values), rentepercentages/jaar);
				
				attribute<percent_yr> R_k := float64(rentepercentages/koop[rentepercentages_rel])[percent_yr];
				attribute<percent_yr> R_h := float64(rentepercentages/parthuur[rentepercentages_rel])[percent_yr];
				attribute<percent_yr> R_s := float64(rentepercentages/wooncorp[rentepercentages_rel])[percent_yr];
			}
		}
	}