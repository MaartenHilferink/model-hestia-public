//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Maatschappelijk: Source = "FO v7a C6", isHidden = "true"
{
	container impl: IsHidden = "true"
	{
		attribute<string> BronExpr(Classifications/GebiedsOptie) :=
				+replace(
					Classifications/GebiedsOptie/IsPlanregioOptie
					? 'StateNaAllocatie/Flow/Kmi_Total * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@RO@)'
					: 'StateNaAllocatie/@RO@/Kmi_Totaal'
				, '@RO@', Classifications/GebiedsOptie/name);
	}
	container gebouwen
	{
		container WaterstofVerbruik :=
				for_each_nedv(Classifications/BebouwingsSector/name, 
					replace(
						'sum(Allocatie/@BC@/BO/jaarlijks/Kj_H2, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container ElektriciteitsVraag :=
				for_each_nedv(Classifications/BebouwingsSector/name, 
					replace(
						'sum(Allocatie/@BC@/Elektriciteit/Maatschappelijk, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container AardGasVerbruik :=
				for_each_nedv(Classifications/BebouwingsSector/name,
					replace(
						'sum(Allocatie/@BC@/AardGas/Maatschappelijk, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container GebouwVerbetering :=
				for_each_nedv(Classifications/BebouwingsSector/name,
					replace(
						'sum(Allocatie/@BC@/BO/KapitaalLasten/Kmi_gv, BebouwingsComponenten/@BC@/results/PlanRegio_rel)'
					,	'@BC@', Classifications/BebouwingsSector/name
					)
				,PlanRegio
				,Eur_yr
				)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsSector/name)+')';
		}
		container WoningTellingen_PPR {
			container BouwdeelAreaalPerIsolatieniveau := for_each_nedv(Classifications/BouwdeelIsolatie/name
			,	replace('sum(Allocatie/Woning/BO/Bouwdelen/@BD * Float64(Allocatie/Woning/BO/Bouwdelen/Isolatie/@BD == Classifications/IsolatieNiveau/V/@IN), BebouwingsComponenten/Woning/results/PlanRegio_rel)'
				,	'@BD', Classifications/BouwdeelIsolatie/bouwdeel_name
				,	'@IN', Classifications/BouwdeelIsolatie/isolatieniveau_name)
			,	PlanRegio, m2
			);			
			container RV_Installatie := for_each_nedv(Classifications/Installatie/name
			,	replace('sum(UInt32(Allocatie/Woning/BO/InstallatiePerProduct/RVb == Classifications/Installatie/V/@IN), BebouwingsComponenten/Woning/results/PlanRegio_rel)'
				,	'@IN', Classifications/Installatie/name)
			,	PlanRegio, uint32
			);			
		}
		container WoningTellingen_NL {
			unit<uint32> BO := Allocatie/Woning/BO;
			// TODO: ook per woning en relatief (2x)
			// TODO: 1 regel per jaar, let op niet vasthouden tussenresultaten, en obv begin- en eindjaar.
			container BouwdeelAreaalPerIsolatieniveau := for_each_nedv(Classifications/BouwdeelIsolatie/name
			,	replace('sum(BO/Bouwdelen/@BD * Float64(BO/Bouwdelen/Isolatie/@BD == Classifications/IsolatieNiveau/V/@IN))'
				,	'@BD', Classifications/BouwdeelIsolatie/bouwdeel_name
				,	'@IN', Classifications/BouwdeelIsolatie/isolatieniveau_name)
			,	void, m2
			);			
			
			container RV_Installatie := for_each_nedv(Classifications/Installatie/name
			,	replace('sum(UInt32(BO/InstallatiePerProduct/RVb == Classifications/Installatie/V/@IN))'
				,	'@IN', Classifications/Installatie/name)
			,	void, uint32
			);			
		}
		container Installaties {
			// voor iedere unieke combinatie van InstallatiePerProduct
			// (RVb RVp TWb TWp KDb KDp KK VT)  #woningen FV/RV FV/TW FV/KD FV/VT FV/EA FV/KK 
			// VR VR VR VR geen geen fornuis geen   6000000   veel beetje geen beetje geen
			container imp {
				unit<uint32> BO := Allocatie/Woning/BO;
				
				unit<uint32> I := Classifications/Installatie;
				unit<uint32> II := combine(I, I)
				{
					attribute<string> label := nr_1 == nr_2 ? I/label[nr_1] : 'basis: '+I/label[nr_1] + '; piek: '+I/label[nr_2], DialogType = "LabelText";
				}
				attribute<II> InstallatieGetalRV_rel(BO) := combine_data(II, BO/InstallatiePerProduct/RVb, BO/InstallatiePerProduct/RVp);
				attribute<II> InstallatieGetalTW_rel(BO) := combine_data(II, BO/InstallatiePerProduct/TWb, BO/InstallatiePerProduct/TWp);
				attribute<II> InstallatieGetalKD_rel(BO) := combine_data(II, BO/InstallatiePerProduct/KDb, BO/InstallatiePerProduct/KDp);

				unit<uint32> AS := Classifications/AfgifteSysteem;
				unit<uint32> VT := Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes;
				unit<uint32> DK := Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes;
				unit<uint32> KK := Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes;
				
				unit<uint32> InstallatieGetalOV := combine(AS, VT, DK, KK);
				
				attribute<uint32> InstallatieGetalOV_rel(BO) := 
					combine_data(InstallatieGetalOV, 
						BO/InstallatiePerProduct/AS, 
						combine_data(combine(VT, DK, KK)
						,	BO/InstallatiePerProduct/VT
						,	combine_data(combine(DK, KK)
							,	BO/InstallatiePerProduct/DK
							,	BO/InstallatiePerProduct/KK
							)
						)
					);

				unit<uint32> Voorkomend_InstallatieGetalRV := unique(InstallatieGetalRV_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalRV_rel, values); attribute<string> Label := II/label[Values]; }
				unit<uint32> Voorkomend_InstallatieGetalTW := unique(InstallatieGetalTW_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalTW_rel, values); attribute<string> Label := II/label[Values]; }
				unit<uint32> Voorkomend_InstallatieGetalKD := unique(InstallatieGetalKD_rel) { attribute<.> per_BO(BO) := rlookup(InstallatieGetalKD_rel, values); attribute<string> Label := II/label[Values]; }
				unit<uint32> Voorkomend_InstallatieGetalOV := unique(InstallatieGetalOV_rel) 
				{ 
					attribute<.> per_BO(BO) := rlookup(InstallatieGetalOV_rel, values); 
					attribute<AS> AS_rel := InstallatieGetalOV/nr_1[values];
					attribute<VT> VT_rel := InstallatieGetalOV/nr_2[values];
					attribute<DK> DK_rel := InstallatieGetalOV/nr_3[values];
					attribute<KK> KK_rel := InstallatieGetalOV/nr_4[values];
					
					attribute<string> Label := AS/name[AS_rel]+';'+VT/name[VT_rel]+';'+DK/name[DK_rel]+';'+KK/name[KK_rel];
				}
				
				unit<uint32> InstallatieGetal := combine(Voorkomend_InstallatieGetalRV, Voorkomend_InstallatieGetalTW, Voorkomend_InstallatieGetalKD, Voorkomend_InstallatieGetalOV);
				
				attribute<uint32> InstallatieGetal_rel(BO) := 
					combine_data(InstallatieGetal, 
						Voorkomend_InstallatieGetalRV/per_BO, 
						combine_data(combine(Voorkomend_InstallatieGetalTW , Voorkomend_InstallatieGetalKD, Voorkomend_InstallatieGetalOV)
						,	Voorkomend_InstallatieGetalTW/per_BO
						,	combine_data(combine(Voorkomend_InstallatieGetalKD, Voorkomend_InstallatieGetalOV)
							,	Voorkomend_InstallatieGetalKD/per_BO
							,	Voorkomend_InstallatieGetalOV/per_BO
							)
						)
					);
				attribute<results> results_rel(BO) := rlookup(InstallatieGetal_rel, results/values);
			}
			// results per InstallatiePakket
			unit<uint32> results := unique(imp/InstallatieGetal_rel) 
			{ 
				attribute<imp/Voorkomend_InstallatieGetalRV> Voorkomend_InstallatieGetalRV_rel := (values / (#imp/Voorkomend_InstallatieGetalTW * #imp/Voorkomend_InstallatieGetalKD * #imp/Voorkomend_InstallatieGetalOV))[imp/Voorkomend_InstallatieGetalRV];
				attribute<imp/Voorkomend_InstallatieGetalTW> Voorkomend_InstallatieGetalTW_rel := (values / (#imp/Voorkomend_InstallatieGetalKD * #imp/Voorkomend_InstallatieGetalOV) % #imp/Voorkomend_InstallatieGetalTW)[imp/Voorkomend_InstallatieGetalTW];
				attribute<imp/Voorkomend_InstallatieGetalKD> Voorkomend_InstallatieGetalKD_rel := (values / #imp/Voorkomend_InstallatieGetalOV % (#imp/Voorkomend_InstallatieGetalKD * #imp/Voorkomend_InstallatieGetalOV))[imp/Voorkomend_InstallatieGetalKD];
				attribute<imp/Voorkomend_InstallatieGetalOV> Voorkomend_InstallatieGetalOV_rel := (values % #imp/Voorkomend_InstallatieGetalOV)[imp/Voorkomend_InstallatieGetalOV];
				
				attribute<string> Label := 
					imp/Voorkomend_InstallatieGetalRV/Label[Voorkomend_InstallatieGetalRV_rel]+';'+
					imp/Voorkomend_InstallatieGetalTW/Label[Voorkomend_InstallatieGetalTW_rel]+';'+
					imp/Voorkomend_InstallatieGetalKD/Label[Voorkomend_InstallatieGetalKD_rel]+';'+
					imp/Voorkomend_InstallatieGetalOV/Label[Voorkomend_InstallatieGetalOV_rel];
					
				attribute<uint32> nrWoningen := pcount(imp/results_rel);
				attribute<nrAsl> nrAansluitingen := sum(imp/BO/nrAansluitingen, imp/results_rel);
				container Functioneel := for_each_nedv(Classifications/FunctioneleVraag/name
				,	'sum(imp/BO/Functioneel/'+Classifications/FunctioneleVraag/name+', imp/results_rel)'
				,	., GJ_yr );
				
				container metervraag := for_each_nedv(Classifications/BemeterdeGebouwInput/name
				,	'sum(imp/BO/metervraag/'+Classifications/BemeterdeGebouwInput/name+', imp/results_rel)'
				,	., GJ_yr );
			}
		}
		
		container Bouwdelen {
			// evenzo voor iedere voorkomende combinatie van Bouwdelen: 4^10 = 2^20
			container imp {
				unit<uint32> BO := Allocatie/Woning/BO;
				parameter<bool> CheckBouwdeelInvariants := #Classifications/Bouwdeel == 10 && #Classifications/IsolatieNiveau == 4;
				attribute<uint16> BouwdeelG1(BO) := =replace('UInt16(BO/Bouwdelen/Isolatie/@B0) * 256w + UInt16(BO/Bouwdelen/Isolatie/@B1) * 64w +UInt16(BO/Bouwdelen/Isolatie/@B2) * 16w + UInt16(BO/Bouwdelen/Isolatie/@B3) * 4w +UInt16(BO/Bouwdelen/Isolatie/@B4)'
					,	'@B0', Classifications/Bouwdeel/name[0[Classifications/Bouwdeel]]
					,	'@B1', Classifications/Bouwdeel/name[1[Classifications/Bouwdeel]]
					,	'@B2', Classifications/Bouwdeel/name[2[Classifications/Bouwdeel]]
					,	'@B3', Classifications/Bouwdeel/name[3[Classifications/Bouwdeel]]
					,	'@B4', Classifications/Bouwdeel/name[4[Classifications/Bouwdeel]]
				);
				attribute<uint16> BouwdeelG2(BO) := =replace('UInt16(BO/Bouwdelen/Isolatie/@B0) * 256w + UInt16(BO/Bouwdelen/Isolatie/@B1) * 64w +UInt16(BO/Bouwdelen/Isolatie/@B2) * 16w + UInt16(BO/Bouwdelen/Isolatie/@B3) * 4w +UInt16(BO/Bouwdelen/Isolatie/@B4)'
					,	'@B0', Classifications/Bouwdeel/name[5[Classifications/Bouwdeel]]
					,	'@B1', Classifications/Bouwdeel/name[6[Classifications/Bouwdeel]]
					,	'@B2', Classifications/Bouwdeel/name[7[Classifications/Bouwdeel]]
					,	'@B3', Classifications/Bouwdeel/name[8[Classifications/Bouwdeel]]
					,	'@B4', Classifications/Bouwdeel/name[9[Classifications/Bouwdeel]]
				);
				attribute<uint32> BouwdeelGetal(BO) := UInt32(BouwdeelG1) * 1024 + UInt32(BouwdeelG2);
				attribute<uint32> combine_factor(Classifications/Bouwdeel) : [ 262144, 65536, 16384, 4096, 1024, 256, 64, 16, 4, 1];
				
				attribute<results> results_rel(BO) := rlookup(BouwdeelGetal, results/values); 
			}
			unit<uint32> results := unique( imp/BouwdeelGetal )  
			{ 
				container Isolatie := for_each_nedv(Classifications/Bouwdeel/name
				,	'(values / imp/combine_factor[Classifications/Bouwdeel/V/'+Classifications/Bouwdeel/name+'] % 4)[Classifications/IsolatieNiveau]'
				,	., Classifications/IsolatieNiveau	
				);
				attribute<string> Label := ='add('+AsItemList(''''+Classifications/Bouwdeel/name+'=''+Classifications/IsolatieNiveau/name[Isolatie/'+Classifications/Bouwdeel/name+']+'' ''')+')';
				
				attribute<uint32> nrWoningen := pcount(imp/results_rel);
				attribute<nrAsl> nrAansluitingen := sum(imp/BO/nrAansluitingen, imp/results_rel);
				container Functioneel := for_each_nedv(Classifications/FunctioneleVraag/name
				,	'sum(imp/BO/Functioneel/'+Classifications/FunctioneleVraag/name+', imp/results_rel)'
				,	., GJ_yr );
				
				container metervraag := for_each_nedv(Classifications/BemeterdeGebouwInput/name
				,	'sum(imp/BO/metervraag/'+Classifications/BemeterdeGebouwInput/name+', imp/results_rel)'
				,	., GJ_yr );
				
				container Arealen := for_each_nedv(Classifications/Bouwdeel/name
				,	'sum(imp/BO/Bouwdelen/'+Classifications/Bouwdeel/name+', imp/results_rel)'
				,	., m2 );
			}
		}
		attribute<Eur>    Ki_GebouwVerbetering  (PlanRegio) := ='add('+AsItemList('sum(Allocatie/'+Classifications/BebouwingsSector/name+'/BO/eenmalig/Ki_gv, BebouwingsComponenten/'+Classifications/BebouwingsSector/name+'/results/PlanRegio_rel)')+')';
		attribute<Eur_yr> Kmi_GebouwVerbetering (PlanRegio) := ='add('+AsItemList('sum(Allocatie/'+Classifications/BebouwingsSector/name+'/BO/KapitaalLasten/Kmi_gv, BebouwingsComponenten/'+Classifications/BebouwingsSector/name+'/results/PlanRegio_rel)')+')';
		attribute<Eur_yr> Kmi_Totaal            (PlanRegio) := ElektriciteitsVraag/Km_Totaal + AardGasVerbruik/Km_Totaal + Kmi_GebouwVerbetering;
	}
	container LokaleEnergieProductie
	{
		attribute<Eur>    Ki_Totaal30  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal30')+')';
		attribute<Eur>    Ki_Totaal20  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal20')+')';
		attribute<Eur>    Ki_Totaal15  (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_Totaal15')+')';
		attribute<Eur>    Ki_TotaalLTAS(PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Ki_TotaalLTAS')+')';
		attribute<Eur>    Ki_Totaal    (PlanRegio) := Ki_Totaal30 + Ki_Totaal20 + Ki_Totaal15;
		attribute<Eur_yr> Kj_Onderhoud (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Kj_Onderh_excl')+')';
		attribute<Eur_yr> Kj_Admin     (PlanRegio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsSector/name+'/LokaleEnergieProductie/Kj_admin_excl')+')';
		attribute<_yr>    ann_30       (Planregio) := const(NCW/mr30/AnnualisationFactor, planregio);
		attribute<_yr>    ann_20       (Planregio) := const(NCW/mr20/AnnualisationFactor, planregio);
		attribute<_yr>    ann_15       (Planregio) := const(NCW/mr15/AnnualisationFactor, planregio);
		attribute<Eur_yr> Kmi_30       (PlanRegio) := Ki_Totaal30 * NCW/mr30/AnnualisationFactor;
		attribute<Eur_yr> Kmi_20       (PlanRegio) := Ki_Totaal20 * NCW/mr20/AnnualisationFactor;
		attribute<Eur_yr> Kmi_15       (PlanRegio) := Ki_Totaal15 * NCW/mr15/AnnualisationFactor;
		attribute<Eur_yr> Kmi_LTAS     (PlanRegio) := Ki_TotaalLTAS * NCW/mr30/AnnualisationFactor;
		attribute<Eur_yr> Kmi_Totaal   (PlanRegio) := Ki_Totaal30 * NCW/mr30/AnnualisationFactor + Ki_Totaal20 * NCW/mr20/AnnualisationFactor + Ki_Totaal15 * NCW/mr15/AnnualisationFactor+ Kj_Onderhoud + Kj_Admin;
	}
	container net
	{
		attribute<Eur_yr> Kj_gasnet_netto  (PlanRegio) := netwerken/aardgas/Kj_netto;
		attribute<Eur_yr> Kj_eleknet_netto (PlanRegio) := netwerken/elektriciteit/Kj_netto;
	}
	container Gebiedopties_Km
	{
		attribute<Eur_yr> Km_id_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Km_id_gas;
		attribute<Eur_yr> Km_id_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Km_id_elek;
		attribute<Eur_yr> Kj_id_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kj_id_oh;
		attribute<Eur_yr> Kj_id_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kj_id_adm;
		attribute<Eur_yr> Km_ow_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_gas;
		attribute<Eur_yr> Km_ow_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_elek;
		attribute<Eur_yr> Kj_ow_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_oh;
		attribute<Eur_yr> Kj_ow_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_adm;
		attribute<Eur_yr> Kj_ow_productie (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_productie;
		attribute<Eur_yr> Km_wd_gas       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_gas;
		attribute<Eur_yr> Km_wd_elek      (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_elek;
		attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_oh;
		attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_adm;
		attribute<Eur_yr> Kj_pt_oh        (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_oh;
		attribute<Eur_yr> Kj_pt_adm       (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_adm;
		attribute<Eur_yr> totaal          (PlanRegio) := 
			  Km_id_gas + Km_id_elek + Kj_id_oh + Kj_id_adm                   //kosten ID
			+ Km_ow_gas + Km_ow_elek + Kj_ow_oh + Kj_ow_adm + Kj_ow_productie //kosten OW
			+ Km_wd_gas + Km_wd_elek + Kj_wd_oh + Kj_wd_adm                   //kosten WD
			+ Kj_pt_oh + Kj_pt_adm;                                           //kosten PT
	}
	container Gebiedopties_Kmi
	{
		attribute<Eur_yr> Kmi_ge_pm (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_pm, Descr = "Maatschappelijke kosten investering projectmanagement";
		attribute<Eur_yr> Kmi_ge_ov (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_ov, Descr = "Maatschappelijke kosten investering ongeriefsvergoedingen";
		attribute<Eur_yr> Kmi_id    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/id/Kmi_id,    Descr = "Maatschappelijke kosten investering inpandige distributie";
		attribute<Eur_yr> Kmi_pt    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/pt/Kmi_pt,    Descr = "Maatschappelijke kosten investering primair transport";
		attribute<Eur_yr> Kmi_ow    (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ow/Kmi_ow,    Descr = "Maatschappelijke kosten investering opwekking";
		attribute<Eur_yr> totaal    (PlanRegio) := Kmi_ge_pm + Kmi_ge_ov + Kmi_id + Kmi_pt + Kmi_ow;
	}
	attribute<Eur_yr> Om_Comfort (PlanRegio) := StateNaAllocatie/totaal/jaarlijks/ge/Om_ge_comfort;
	attribute<Eur_yr> Kmi_Totaal (PlanRegio) := net/Kj_gasnet_netto + net/Kj_eleknet_netto + gebouwen/Kmi_Totaal + LokaleEnergieProductie/Kmi_Totaal + Gebiedopties_Km/totaal + Gebiedopties_Kmi/totaal;
}