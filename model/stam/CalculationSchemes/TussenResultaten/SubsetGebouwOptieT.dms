//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - Planbureau voor de Leefomgeving                  //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template SubsetGebouwOptieT
{
	// begin case parameters	
	unit<uint32> ActiefObject;
	// end case parameters
	
	// TODO: Wegsubstitueren
	attribute<Classifications/GebouwOptie>     GebouwOptie_rel    (ActiefObject) := ActiefObject/GebouwOptie_rel;
	attribute<bool>                            Criterium          (ActiefObject) := ActiefObject/Criterium;
	attribute<Classifications/IsolatieAmbitie> IsolatieAmbitie_rel(ActiefObject) := ActiefObject/IsolatieAmbitie_rel;
	
	attribute<bool> Geschikt (ActiefObject) := 
	AND( ActiefObject/SchilLabel_rel <= Classifications/GebouwOptie/Min_schillabel_rel[GebouwOptie_rel]
	,	OR(BO/Aansluitingen/GNet[ActiefObject/BO_rel] > 0[nrAsl], not(Classifications/GebouwOptie/GasNodig[GebouwOptie_rel]))
	)
	, Descr = "Voldoet de woning aan de isolatienorm voor deze gebouwoptie en is benodigde aansluiting aanwezig?";
	
	//===== Selectie van woningen die voldoen aan de minimale isolatiegraad voor de gebouwoptie in kwestie =====
	unit<uint32> GeschiktObject := subset(Geschikt && Criterium)
	{
		attribute<ActiefObject>                ActiefObject_rel := nr_orgentity;
		attribute<uint32>                      BO_rel           := ActiefObject/BO_rel[ActiefObject_rel];
		attribute<Classifications/SchilLabel>  SchilLabel_rel   := ActiefObject/SchilLabel_rel[ActiefObject_rel];
		attribute<Classifications/GebouwOptie> GebouwOptie_rel  := ../GebouwOptie_rel[ActiefObject_rel];
		
		container AansluitCapaciteit
		{
			attribute<kW> RV (GeschiktObject) := ActiefObject/AansluitCapaciteit/RV[ActiefObject_rel];
			attribute<kW> TW (GeschiktObject) := ActiefObject/AansluitCapaciteit/TW[ActiefObject_rel];
			attribute<kW> KD (GeschiktObject) := ActiefObject/AansluitCapaciteit/KD[ActiefObject_rel];
		}

		container Bouwdelen := for_each_nedv(Classifications/Bouwdeel/name
			,	replace('BO/Bouwdelen/@BN[BO_rel]', '@BN', Classifications/Bouwdeel/name)
			,	GeschiktObject, m2
			)
		{
			container Isolatie := for_each_nedv(Classifications/Bouwdeel/name
			,	replace('ActiefObject/Bouwdelen/Isolatie/@BN[ActiefObject_rel]', '@BN', Classifications/Bouwdeel/name)
			,	GeschiktObject, Classifications/IsolatieNiveau
			);
		}
		container Functioneel := for_each_nedv(Classifications/FunctioneleVraag/name
			,	replace('ActiefObject/Functioneel/@BN[ActiefObject_rel]', '@BN', Classifications/FunctioneleVraag/name)
			,	GeschiktObject, GJ_yr
			);
		
		
		//===== Installaties die horen bij de gebouwoptie in kwestie =====	
		container Installatie_rel := for_each_nedv(Classifications/Product/name
		,	replace('Classifications/GebouwOptie/Installatie_rel/@PN[GeschiktObject/GebouwOptie_rel]', '@PN', Classifications/Product/name)
		,	GeschiktObject, Classifications/Installatie
		);	
		
		container InstallatiePerProduct := for_each_nedv(Classifications/Product/name
			, replace(IPP_active_cond+'?'+IPP_active_expr+':'+IPP_default_expr, '@PN', Classifications/Product/name)
			, GeschiktObject
			, Classifications/Installatie
		)
		{
			attribute<Classifications/AfgifteSysteem> AS (GeschiktObject) :=  max_elem(
				 BO/InstallatiePerProduct/AS[BO_rel]
				,Classifications/Performance/AfgifteSysteem_rel[Func2Meter/SPF/PerformancePerProduct/RVb]
				,Classifications/Performance/AfgifteSysteem_rel[Func2Meter/SPF/PerformancePerProduct/RVp]);
			

			attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> VT (GeschiktObject) := OverigeInstallaties/ventilatie/Installatietype_rel;
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> DK (GeschiktObject) := OverigeInstallaties/zonPV/Installatietype_rel     ;
			attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> KK (GeschiktObject) := OverigeInstallaties/koken/Installatietype_rel     ;
		}	
	}
	
	//===== InstallatiePerProduct geeft per BebouwingsObject of per SchilLabel voor ieder Product de te kiezen of al aanwezige installatie =====
	
	// TODO: check op dat Input van Installatie wel Aangesloten kan worden; Beinvloedt dit de activatie of alleen de invulling ?
	parameter<string> IPP_active_cond := 'AND(GeschiktObject/Installatie_rel/@PN != Classifications/Installatie/V/geen, BO/Activatie/Producten/@PN[GeschiktObject/BO_rel])'; 
	parameter<string> IPP_active_expr := 'GeschiktObject/Installatie_rel/@PN';
	parameter<string> IPP_default_expr := 'BO/InstallatiePerProduct/@PN[GeschiktObject/BO_rel]';
		
	container Func2Meter := CalculationSchemes/FunctioneelToMetervraag(GeschiktObject);
	
	// cap_prod geeft per BebouwingsObject of per SchilLabel voor ieder Product de benodigde capaciteit obv het vastgestelde profiel.
	

	parameter<string> KX_cap_Expr :=
		'add('+
			AsItemList(
				replace('Func2Meter/eEffect/CapaciteitPerInstallatie/@I * VerbruiksOpties/Installatie/K@X_cap[Classifications/Installatie/V/@I]'
				, '@I', Classifications/Installatie/name)
			)+
		')'
	, isHidden = "True";

	attribute<Eur   > Ki_cap     (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'i');
	attribute<Eur   > Ki30_cap   (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'i30');
	attribute<Eur   > Ki20_cap   (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'i20');
	attribute<Eur   > Ki15_cap   (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'i15');
	attribute<Eur_yr> Kj_OH_cap  (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'j_OH');
	attribute<Eur_yr> Kj_Adm_cap (GeschiktObject) := =replace(KX_cap_Expr, '@X', 'j_Adm');


	attribute<Eur   > Ki_LTAS (GeschiktObject) := 
		(GeschiktObject/InstallatiePerProduct/AS >= Classifications/AfgifteSysteem/V/LTAS) && (BO/InstallatiePerProduct/AS[GeschiktObject/BO_rel] < Classifications/AfgifteSysteem/V/LTAS)
			? (BO/IsMeergezins[GeschiktObject/BO_rel]
				? BO/BCkentallen/Ki_LTAS_h_asl 
				: BO/BCkentallen/Ki_LTAS_l_asl) * BO/nrAansluitingen[GeschiktObject/BO_rel] + BO/BCkentallen/Ki_LTAS_opp * BO/Oppervlakte[GeschiktObject/BO_rel]
			: const(0[Eur], GeschiktObject);
			

	parameter<string> KX_expr :=
		'add('
			'VerbruiksOpties/GebouwOptie/K@X_asl[GeschiktObject/GebouwOptie_rel] * BO/nrAansluitingen[GeschiktObject/BO_rel],  '
			'VerbruiksOpties/GebouwOptie/K@X_opp[GeschiktObject/GebouwOptie_rel] * BO/Oppervlakte[GeschiktObject/BO_rel] , ' 
			'K@X_cap'
		+')'
	,	isHidden = "True";

	attribute<Eur   > Ki_LO       (GeschiktObject) := =replace(KX_expr, '@X', 'i');
	attribute<Eur   > Ki30_LO     (GeschiktObject) := =replace(KX_expr, '@X', 'i30');
	attribute<Eur   > Ki20_LO     (GeschiktObject) := =replace(KX_expr, '@X', 'i20');
	attribute<Eur   > Ki15_LO     (GeschiktObject) := =replace(KX_expr, '@X', 'i15');	
	
	container Jaarlijks := Kj_verbruik
	{	
		attribute<Eur_yr> KJ_OH_LO       (GeschiktObject) := =replace(KX_expr, '@X', 'j_OH');
		attribute<Eur_yr> Kj_Adm_LO      (GeschiktObject) := =replace(KX_expr, '@X', 'j_Adm');
		attribute<Eur_yr> Kj_Vastrecht_g (GeschiktObject) := VastRechtBijdrageG; // bijdrage en heffingskortingen voor E, MT en LT zijn voor alle GebouwOpties hetzelfde, dus niet relevant voor de afweging.

	}
	
	attribute<Eur   > Ki_gv       (GeschiktObject) := leerCurves/Isolatie/Curve * ActiefObject/Ki_GV[GeschiktObject/ActiefObject_rel];

	attribute<Eur>    Ki_totaal   (GeschiktObject) := Ki_LO   + Ki_GV + Ki_LTAS;
	attribute<Eur>    Ki30_totaal (GeschiktObject) := Ki30_LO + Ki_GV + Ki_LTAS;
	attribute<Eur>    Ki20_totaal (GeschiktObject) := Ki20_LO;
	attribute<Eur>    Ki15_totaal (GeschiktObject) := Ki15_LO;


	
	container OverigeInstallaties
	{	
		container ventilatie
		{
			container Afweging
			{
				attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> Installatietype_org (GeschiktObject) := BO/InstallatiePerProduct/VT[GeschiktObject/BO_rel];
				
				attribute<bool> IsAlabel (GeschiktObject) := GeschiktObject/Schillabel_rel == classifications/schillabel/V/A;  //TODO: hier afweging invoegen
				attribute<bool> IsBlabel (GeschiktObject) := GeschiktObject/Schillabel_rel == classifications/schillabel/V/B;  //TODO: hier afweging invoegen
				
				attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> Installatietype_def (GeschiktObject) :=
					  IsAlabel ? Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V/WTW
					: IsBlabel ? Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Mech
					: Installatietype_org;
				
				attribute<bool> IsChangedNow (GeschiktObject) := Installatietype_org != Installatietype_def;
				attribute<eur>  Ki_vent     (GeschiktObject) := float64(IsChangedNow) * BO/nrAansluitingen[GeschiktObject/BO_rel] * 
					( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/Ki_asl_min[Installatietype_def]
					+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/Ki_asl_max[Installatietype_def]);
			}
			attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> Installatietype_rel (GeschiktObject) := Afweging/Installatietype_def;
		}
		container zonB
		{
			container afweging
			{
				attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> Installatietype_org (GeschiktObject) := BO/InstallatiePerProduct/DK[GeschiktObject/BO_rel];
				
				//TODO: hier afweging invoegen voor keuze zon
				attribute<bool> KeuzeZonB (GeschiktObject) := (Installatietype_org == Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonPV_gr) ? false : false; 
				
				attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> Installatietype_def (GeschiktObject) :=
					KeuzeZonB ? 
						Installatietype_org == Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonPV_kl ? 
							  Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonB_PVkl
							: Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonPV_kl
					: Installatietype_org;
				
				attribute<bool> IsChangedNow (GeschiktObject) := Installatietype_org != Installatietype_def;
				attribute<kW>    P           (GeschiktObject) := Func2Meter/ZonB/P;
				attribute<eur>  Ki_zonB      (GeschiktObject) := float64(IsChangedNow) * (
					(BO/nrAansluitingen[GeschiktObject/BO_rel] * 
						( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_asl_min[Installatietype_def]
						+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_asl_max[Installatietype_def])) +
					(P * 
						( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_cap_min[Installatietype_def]
						+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_cap_max[Installatietype_def]))
						);
			}
		}
		
		container zonPV
		{
			container Afweging
			{
				attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> Installatietype_org (GeschiktObject) := BO/InstallatiePerProduct/DK[GeschiktObject/BO_rel];
				
				attribute<bool> KeuzePVgroot (GeschiktObject) := Installatietype_org == Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonB ? false : false; //TODO: hier afweging invoegen
				attribute<bool> KeuzePVklein (GeschiktObject) := const(false,GeschiktObject); //TODO: hier afweging invoegen
				
				attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> Installatietype_def (GeschiktObject) :=
					  KeuzePVgroot ? Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonPV_gr
					: KeuzePVklein ? 
						Installatietype_org == Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonB ? 
							  Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonB_PVkl
							: Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/V/ZonPV_kl
					: Installatietype_org;
				
				attribute<bool> IsChangedNow (GeschiktObject) := Installatietype_org != Installatietype_def;
				attribute<kW>    P           (GeschiktObject) := Func2Meter/eEffect/ZonPV/P;
				attribute<eur>  Ki_zonPV     (GeschiktObject) := float64(IsChangedNow) * (
					(BO/nrAansluitingen[GeschiktObject/BO_rel] * 
						( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_asl_min[Installatietype_def]
						+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_asl_max[Installatietype_def])) +
					(P * 
						( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_cap_min[Installatietype_def]
						+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes/Ki_cap_max[Installatietype_def]))
						);
			}
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> Installatietype_rel (GeschiktObject) := Afweging/Installatietype_def;
		}
		
		container koken
		{
			container Afweging
			{
				attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> Installatietype_org (GeschiktObject) := BO/InstallatiePerProduct/KK[GeschiktObject/BO_rel];
				
				attribute<bool> Gasloos (GeschiktObject) := Func2Meter/metervraag_per_input/Gas == 0.0[GJ_yr], Descr = "Gebruikt de woning nog gas, buiten koken om?"; //TODO: hier afweging invoegen
				
				attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> Installatietype_def (GeschiktObject) := gasloos
					? Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/V/Elek
					: Installatietype_org;
				
				attribute<bool> IsChangedNow (GeschiktObject) := Installatietype_org != Installatietype_def;
				attribute<eur>  Ki_koken     (GeschiktObject) := float64(IsChangedNow) * BO/nrAansluitingen[GeschiktObject/BO_rel] * 
					( Schuiven/KostenMin * Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/Ki_asl_min[Installatietype_def]
					+ Schuiven/KostenMax * Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/Ki_asl_max[Installatietype_def]);
			}
			attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> Installatietype_rel (GeschiktObject) := Afweging/Installatietype_def;
		}
	}
	
	attribute<Eur> Ki_DK (GeschiktObject) := OverigeInstallaties/ZonB/Afweging/Ki_zonB + OverigeInstallaties/ZonPV/Afweging/Ki_zonPV;
	attribute<Eur> Ki_KK (GeschiktObject) := OverigeInstallaties/Koken/Afweging/Ki_koken;
	attribute<Eur> Ki_VT (GeschiktObject) := OverigeInstallaties/Ventilatie/Afweging/Ki_vent;
	
	container metervraag := Func2Meter/result;
	
	
	container meterprijzen
	{
		attribute<Eur_GJ> Pj_e  (GeschiktObject) := Prijzen/Elektriciteit/Staffel/KGJ_eindgebruik_excl [classify(metervraag/e  , Prijzen/Elektriciteit/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pj_gas(GeschiktObject) := Prijzen/AardGas/Staffel/KGJ_eindgebruik_excl       [classify(metervraag/gas, Prijzen/AardGas/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pm_e  (GeschiktObject) := Prijzen/Elektriciteit/Staffel/KGJ_Maatschappelijk  [classify(metervraag/e  , Prijzen/Elektriciteit/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pm_gas(GeschiktObject) := Prijzen/AardGas/Staffel/KGJ_Maatschappelijk        [classify(metervraag/gas, Prijzen/AardGas/Staffel/ClassBreak)];

		parameter<Eur_GJ> Pj_biomassa := Prijzen/Overig/Pj_biomassa;
		parameter<Eur_GJ> Pj_olie     := Prijzen/Overig/Pj_olie;
		parameter<Eur_GJ> Pj_pellets  := Prijzen/Overig/Pj_pellets;
		parameter<Eur_GJ> Pj_H2       := Prijzen/Overig/Pj_H2;

		parameter<Eur_GJ> Pm_biomassa := Pj_biomassa;
		parameter<Eur_GJ> Pm_olie     := Pj_olie;
		parameter<Eur_GJ> Pm_pellets  := Pj_pellets;
		parameter<Eur_GJ> Pm_H2       := Pj_H2;
	}

	container Kj_verbruik := for_each_nedv(
		'Kj_' + Classifications/BemeterdeGebouwInput/name,
		replace('meterprijzen/Pj_@E@ * metervraag/@E@', '@E@', Classifications/BemeterdeGebouwInput/name),
		GeschiktObject,
		Eur_yr)
		{
			attribute<Eur_yr> Totaal (GeschiktObject) := ='add('+AsItemList('Kj_'+Classifications/BemeterdeGebouwInput/name)+')';
			attribute<Eur_yr> Kj_elek (GeschiktObject) := Kj_e;
		}
	container Km_verbruik := for_each_nedv(
		Classifications/BemeterdeGebouwInput/name,
		replace('meterprijzen/Pm_@E@ * metervraag/@E@', '@E@', Classifications/BemeterdeGebouwInput/name),
		GeschiktObject,
		Eur_yr)
		{
			attribute<Eur_yr> Totaal (GeschiktObject) := ='add('+AsItemList(Classifications/BemeterdeGebouwInput/name)+')';
		}

	attribute<Eur_yr> VastRechtBijdrageG (GeschiktObject) := BO/nrAansluitingen[GeschiktObject/BO_rel] * float64(metervraag/gas != 0[GJ_yr])* Kengetallen/Infra/jaarlijksVast_g, Descr = "VastRechtBijdrage voor aansluiting op het gasnet";
	
	attribute<Eur_yr> Kji_GV   (GeschiktObject) := Ki_GV   * NcwRefs/_30/AnnualisationFactor;
	attribute<Eur_yr> Kji_LTAS (GeschiktObject) := Ki_LTAS * NcwRefs/_30/AnnualisationFactor;
	attribute<Eur_yr> Kji30_LO (GeschiktObject) := Ki30_LO * NcwRefs/_30/AnnualisationFactor;
	attribute<Eur_yr> Kji20_LO (GeschiktObject) := Ki20_LO * NcwRefs/_20/AnnualisationFactor;
	attribute<Eur_yr> Kji_DK   (GeschiktObject) := Ki_DK   * NcwRefs/_20/AnnualisationFactor;
	attribute<Eur_yr> Kji_KK   (GeschiktObject) := Ki_KK   * NcwRefs/_15/AnnualisationFactor; //TODO: check afschrijftermijn
	attribute<Eur_yr> Kji_VT   (GeschiktObject) := Ki_VT   * NcwRefs/_15/AnnualisationFactor; //TODO: check afschrijftermijn
	attribute<Eur_yr> Kji15_LO (GeschiktObject) := Ki15_LO * NcwRefs/_15/AnnualisationFactor;
	attribute<Eur_yr> Kji_LO   (GeschiktObject) := Kji30_LO + Kji20_LO + Kji15_LO;

	attribute<Eur_yr> Kmi_GV   (GeschiktObject) := Ki_GV   * NCW/mr30/AnnualisationFactor;
	attribute<Eur_yr> Kmi_LTAS (GeschiktObject) := Ki_LTAS * NCW/mr30/AnnualisationFactor;
	attribute<Eur_yr> Kmi30_LO (GeschiktObject) := Ki30_LO * NCW/mr30/AnnualisationFactor;
	attribute<Eur_yr> Kmi20_LO (GeschiktObject) := Ki20_LO * NCW/mr20/AnnualisationFactor;
	attribute<Eur_yr> Kmi_DK   (GeschiktObject) := Ki_DK   * NCW/mr20/AnnualisationFactor;
	attribute<Eur_yr> Kmi_KK   (GeschiktObject) := Ki_KK   * NCW/mr15/AnnualisationFactor; //TODO: check afschrijftermijn
	attribute<Eur_yr> Kmi_VT   (GeschiktObject) := Ki_VT   * NCW/mr15/AnnualisationFactor; //TODO: check afschrijftermijn
	attribute<Eur_yr> Kmi15_LO (GeschiktObject) := Ki15_LO * NCW/mr15/AnnualisationFactor;
	attribute<Eur_yr> Kmi_LO   (GeschiktObject) := Kmi30_LO + Kmi20_LO + Kmi15_LO;

	parameter<float64> S_gv := (1.0 - EIA_Opties/Rs_GebouwVerbetering), Descr = "eigen aandeel investering op gebouwverbetering na aftrek van subsidies";
	parameter<float64> S_lo := (1.0 - EIA_Opties/Rs_LokaleOpwekking  ), Descr = "eigen aandeel investering op lokale opwekking na aftrek van subsidies";

	attribute<Eur> Oi30_LO (GeschiktObject) := Ki30_LO * EIA_Opties/Rs_LokaleOpwekking;
	attribute<Eur> Oi20_LO (GeschiktObject) := (Ki20_LO + Ki_DK) * EIA_Opties/Rs_LokaleOpwekking;
	attribute<Eur> Oi15_LO (GeschiktObject) := Ki15_LO * EIA_Opties/Rs_LokaleOpwekking; 
	attribute<Eur> Oi_GV   (GeschiktObject) := Ki_gv   * EIA_Opties/Rs_GebouwVerbetering; 
	
	attribute<Eur_yr> Kj_gv_incentive (GeschiktObject) := 
		  Kj_verbruik/totaal       * EIA_Opties/R_VerbruikSplitIncentiveFactor
		+ jaarlijks/Kj_vastrecht_g * EIA_Opties/R_VastrechtSplitIncentiveFactor;

	attribute<Eur_yr> kosten_j (GeschiktObject) :=
		  Kji_GV * S_gv          * BTW_Factor_gv
		+ Kji_LO * S_lo          * BTW_Factor
		+ Kji_LTAS               * BTW_Factor
		+ Kji_DK * S_lo          * BTW_Factor
		+ Kji_KK                 * BTW_Factor
		+ Kji_VT                 * BTW_Factor
		+ (jaarlijks/Kj_OH_LO + jaarlijks/Kj_Adm_LO) * BTW_Factor
		+ Kj_gv_incentive        * BTW_Factor
		;

	attribute<Eur_yr> kosten_m(GeschiktObject) := 
		  Kmi_GV
		+ Kmi_LO
		+ Kmi_DK
		+ Kmi_KK
		+ Kmi_VT
		+ Kmi_LTAS
		+ (jaarlijks/Kj_OH_LO + jaarlijks/Kj_Adm_LO)
		+ Km_verbruik/totaal;
		
	attribute<Eur_yr> kosten (GeschiktObject) := =(LocatieSpecifiekeOpties/GebouwOpties/KiesMaatschappelijk) ? 'kosten_m' : 'kosten_j';

	attribute<Eur_yr> kosten_or_undefined (GeschiktObject) := Criterium[GeschiktObject/ActiefObject_rel] ? kosten : (0/0)[Eur_yr];
	
	unit<uint32> results := GeschiktObject 
	{
		attribute<Eur_yr> kosten_tbv_afweging (GeschiktObject) := kosten_or_undefined; 
		
		container BemeterdeGebouwInput_rel := Func2Meter/BemeterdeGebouwInput_rel;
		
		container eenmalig := for_each_nedv(
				Classifications/GebouwOptie_eenmalig/name,
				replace('.../@PT@', '@PT@', Classifications/GebouwOptie_eenmalig/name ),
				GeschiktObject,
				Eur);
		container jaarlijks := for_each_nedv(
				Classifications/GebouwOptie_jaarlijks/name,
				replace('.../jaarlijks/@PT@', '@PT@', Classifications/GebouwOptie_jaarlijks/name ),
				GeschiktObject,
				Eur_yr)
				{
					attribute<Eur_yr> Kj_elek (GeschiktObject) := Kj_verbruik/e;
				}
				
		container metervraag := Func2Meter/result;
	}
	
	
}
