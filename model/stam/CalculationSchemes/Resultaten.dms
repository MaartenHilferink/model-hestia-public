//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template Resultaten
{
	// begin case parameters
	parameter<string> RekenstapName;
	// optional case parameter

	parameter<bool> isStap0 := RekenstapName == 'StartJaar';

	parameter<Classifications/Rekenstap> Rekenstap_rel   := rlookup(RekenstapName, Classifications/Rekenstap/name);
	parameter<string>                    RekenJaarName   := Classifications/RekenJaar/name[Classifications/Rekenstap/RekenJaar_rel          [Rekenstap_rel]];
	parameter<string>                    BouwjaarName    := Classifications/ZichtJaar/name[Classifications/Rekenstap/ZichtJaar_rel_bebouwing[Rekenstap_rel]];

	parameter<Classifications/ZichtJaar> ZichtJaar_rel   := RekenJaar_rel;
	parameter<yr_uint16>                 ZichtJaar_jaar  := RekenJaar_jaar;
	parameter<Classifications/RekenJaar> RekenJaar_rel   := Classifications/Rekenstap/RekenJaar_rel[Rekenstap_rel];
	parameter<yr_uint16>                 RekenJaar_jaar  := Classifications/Rekenstap/Jaar         [Rekenstap_rel];
	
	container TussenResultaten      := ='/TussenResultaten/' + RekenstapName   , isHidden = "true";
	unit<uint32> PlanRegio          := Invoer/SpecifiekeInstellingen/PlanRegio , isHidden = "true";
	container Prijzen               := TussenResultaten/Prijzen                , isHidden = "true";
	container BebouwingsComponenten := TussenResultaten/BebouwingsComponenten  , isHidden = "true";
	container NCW                   := TussenResultaten/NCW                    , isHidden = "true";
	container GebiedsAllocatie      := TussenResultaten/GebiedsAllocatie       , isHidden = "true";
	container PrevState             := TussenResultaten/PrevState              , isHidden = "true";
	container StateNaAllocatie      := TussenResultaten/StateNaAllocatie       , isHidden = "true";
	container bebouwing             := StateNaAllocatie/bebouwing              , isHidden = "true";
	container Voorkeuren            := TussenResultaten/Voorkeuren             , isHidden = "true";
	container Allocatie             := TussenResultaten/AllocatieResultaten    , isHidden = "true";
	
	container Generate: isHidden = "false"
	{
		container impl
		{
			parameter<string> onlyOngewogen        := SpecifiekeInstellingen/Rapportage/GewogenResultaten ? '' : '/Ongewogen';
			parameter<string> ExplicitSupplierList :=
				AsList('InputOutput/'+SpecifiekeInstellingen/Rapportage/Regio/name + onlyOngewogen +'/GenerateAll',';');
		}
		parameter<string> All := 'Ready', ExplicitSuppliers = "= impl/ExplicitSupplierList";
	}
	
	container GenerateSamenstelling: isHidden = "false"
	{
		container impl
		{
			parameter<string> WoningSupplierList :=
				AsList(
					';' + AsList('MaatregelenRapportage/BestaandeWoning/'+SpecifiekeInstellingen/Rapportage/Regio/name+'/GenerateAll',';')
					,';'
					);
			parameter<string> UtilSupplierList :=
				AsList(
					';' + AsList('MaatregelenRapportage/BestaandeUtil/'+SpecifiekeInstellingen/Rapportage/Regio/name+'/GenerateAll',';')
					,';'
					);
			parameter<string> ExplicitSupplierList :=
				AsList(
					replace(';' + AsList('MaatregelenRapportage/@BC/'+SpecifiekeInstellingen/Rapportage/Regio/name+'/GenerateAll',';'),'@BC',Classifications/BebouwingsComponent/name)
					,';'
					);
		}
		parameter<string> AllBestaandeWoningen := 'Ready', ExplicitSuppliers = "= impl/WoningSupplierList";
		parameter<string> AllBestaandeUtil     := 'Ready', ExplicitSuppliers = "= impl/UtilSupplierList";
	}

	container InputOutput := for_each_ne(SpecifiekeInstellingen/Rapportage/Regio/name
			,'Rapportage/Flow('
				'SpecifiekeInstellingen/Rapportage/Regio'
				','+Quote(SpecifiekeInstellingen/Rapportage/Regio/name)+
				', value('+ string(id(SpecifiekeInstellingen/Rapportage/Regio)) + ',SpecifiekeInstellingen/Rapportage/Regio)'
			')'
		)
	{
		container Totaal := =(SpecifiekeInstellingen/Rapportage/Regio/name != 'NL')
			? 'Rapportage/Flow(geography/RegioIndelingen/NL, ''NL'', value(0, geography/RegioIndelingen/NL) )'
			: '.';
	}

	container Eindgebruiker :=
		for_each_ne(Classifications/BebouwingsComponent/name,
			replace(
				'Rapportage/EindgebruikerComponent(
					 Allocatie/@BC@/BO
					,Allocatie/@BC@
					,NCW/@NC@15
					,NCW/@NC@20
					,NCW/@NC@30
					,NCW/@NC@50
					,sum(Allocatie/@BC@/AardGas/Vastrecht,              Allocatie/@BC@/BO/PlanRegio_rel)
					,sum(Allocatie/@BC@/AardGas/AansluitBijdrage,       Allocatie/@BC@/BO/PlanRegio_rel)
					,sum(Allocatie/@BC@/Elektriciteit/Vastrecht,        Allocatie/@BC@/BO/PlanRegio_rel)
					,sum(Allocatie/@BC@/Elektriciteit/AansluitBijdrage, Allocatie/@BC@/BO/PlanRegio_rel)
					,Allocatie/@BC@/BO/functioneel/V_warmte * Allocatie/@BC@/BO/Warmtewet/WarmtePrijs
				)'
			, '@BC@', Classifications/BebouwingsComponent/name
			, '@NC@', Classifications/BebouwingsComponent/NcwRefBase
			)
		)
	, Source = "FO v7a C6", isHidden = "true";

	#include <Maatschappelijk.dms>
	#include <EnergyResults.dms>
	#include <MaatregelenRapportage.dms>
	#include <Netwerken.dms>
	#include <EnergieProducent.dms>

	container FolderInfo: isHidden = "True"
	{
		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand(., '%configName%') + '/'+ RekenstapName;
	}
}