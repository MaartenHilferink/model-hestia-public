//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

Template BerekenFunctioneel
{
	unit<uint32> BOdomain;
	unit<uint32> PrevState;
	attribute<PrevState> PrevState_rel (BOdomain);

	attribute<GJ_yr> VT (BOdomain) := PrevState/Functioneel_base/VT[PrevState_rel];
	attribute<GJ_yr> KK (BOdomain) := PrevState/Functioneel_base/KK[PrevState_rel];
	attribute<GJ_yr> EA (BOdomain) := PrevState/Functioneel_base/EA[PrevState_rel];
	attribute<GJ_yr> TW (BOdomain) := PrevState/Functioneel_base/TW[PrevState_rel];
	attribute<GJ_yr> KD (BOdomain) := PrevState/Functioneel_base/KD[PrevState_rel];
	attribute<GJ_yr> RV (BOdomain) := RV_per_Bouwdeel_now/Totaal * Correction_RV;
	
	attribute<Kwh_yr_m2> Kwh_m2_RV  (BOdomain) := (RV_per_Bouwdeel_now/Totaal    / 3.6[MJ / kWh] * 1000 [ MJ / GJ]) / PrevState/Oppervlakte[PrevState_rel];
	attribute<Kwh_yr_m2> Kwh_m2_tot (BOdomain) := ((VT+KK+EA+TW/0.72+KD+RV/1.04) / 3.6[MJ / kWh] * 1000 [ MJ / GJ]) / PrevState/Oppervlakte[PrevState_rel];//, IntegrityCheck = "Kwh_m2_tot < 500[Kwh_yr_m2]";

	attribute<Classifications/Schillabel> Schillabel_rel (BOdomain) := classify(Kwh_m2_tot, classifications/Schillabel/classbreak);
	
	attribute<ratio> Correction_RV (BOdomain) := 1.0[ratio] + Invoer/Kengetallen/Constanten/Rebound_A * Invoer/Kengetallen/Constanten/Rebound_B ^ Kwh_m2_RV;

	// TODO: Kunnen we hier niet gewoon Bouwdelen/Isolatie nemen, ook als not(IsChanged) ?
	container IsolatieNiveau_rel := for_each_nedv(
		classifications/Bouwdeel/name,
		replace(
			'not(Bouwdelen/IsChangedNow/@BN@)'
			'? PrevState/Bouwdelen/Isolatie/@BN@[PrevState_rel]'
			': Bouwdelen/Isolatie/@BN@'
		,	'@BN@', classifications/Bouwdeel/name),
		BOdomain,
		Classifications/IsolatieNiveau);
		
	container BouwdeelIsolatie_rel := for_each_nedv(
		classifications/Bouwdeel/name,
		replace(
			'combine_data(Classifications/BouwdeelIsolatie, classifications/Bouwdeel/V/@BN@, IsolatieNiveau_rel/@BN@)'
		,	'@BN@', classifications/Bouwdeel/name),
		BOdomain,
		Classifications/BouwdeelIsolatie);
	
	 //TODO: R_RV afhankelijk van profiel
	attribute<ratio> R_RV(Classifications/BouwdeelIsolatie):= Classifications/IsolatieMaatregel/R_RV[Classifications/BouwdeelIsolatie/IsolatieMaatregel_rel] / 100[percent];
	
	container RV_per_Bouwdeel_now := for_each_nedv(
		classifications/Bouwdeel/name,
		replace(
			'PrevState/Functioneel_base/RV_N1_per_Bouwdeel_now/@BN@[PrevState_rel] * makedefined(1.0[ratio] - R_RV[BouwdeelIsolatie_rel/@BN@], 0.0[ratio])'
		,	'@BN@', classifications/Bouwdeel/name),
		BOdomain,
		GJ_yr)
	{
		attribute<GJ_yr> Totaal (BOdomain):= ='add('+AsItemList(Classifications/bouwdeel/name)+')';
	}
}